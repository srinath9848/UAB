@model UAB.DTO.ChartSummaryDTO
@using UAB.enums
@{

    int tabIndex = Model.TabIndex;
    string dxClaim = "txtDx" + tabIndex + "Claim" + "_1";
    string cptClaim = "txt" + tabIndex + "Cpt" + "_1";
    string cptModClaim = "txt" + tabIndex + "mod" + "_1";
    string cptQtyClaim = "txt" + tabIndex + "qty" + "_1";
    string cptLinksClaim = "txt" + tabIndex + "links" + "_1";

    string dx2index = "dx" + tabIndex + "index";
    string Dx2Claim = "txt" + tabIndex + "Dx";
    string Div2DxRow = "Div" + tabIndex + "DxRow_1";

    string cpt2index = "cpt" + tabIndex + "index";
    string Cpt2Link = "txt" + tabIndex + "Link";
    string Div2CptRow = "Div" + tabIndex + "CptRow_1";
}
<br />
<div class="form-group row">
    <label class="col-md-2 m-t-15"></label>
    <div class="custom-control custom-checkbox mr-sm-2" id="divChkAll_@tabIndex">
        <input type="checkbox" class="custom-control-input ShadowQADetails" id="chkAll_@tabIndex" onclick="CheckAllboxes('chkAll_@tabIndex')">
        <label class="custom-control-label" for="chkAll_@tabIndex">Accept All</label>
    </div>
    <label class="col-md-3 lessWidth m-t-15"></label>
    <div class="custom-control mr-sm-2 QACorrectionsComments_@tabIndex" style="display:none;">
        <label class="">QA Corrections</label>
    </div>
    <label class="col-md-3 lessWidth m-t-15"></label>
    <div class="custom-control mr-sm-2 QACorrectionsComments_@tabIndex" style="display:none;">
        <label class="">QA Comments</label>
    </div>
</div>
<div class="form-group row">
    <label class="col-md-3 lessWidth m-t-15">Provider</label>
    @{int len = (!string.IsNullOrEmpty(Model.QAProviderText) ? 10 : 20); }
    @{string ProviderText = (Model.ProviderText?.Length > len) ? Model.ProviderText.Substring(0, len) + ".." : Model.ProviderText;}
    @{string QAProviderText = (Model.QAProviderText?.Length > len) ? "/" + Model.QAProviderText.Substring(0, len) + ".." : "/" + Model.QAProviderText;}
    @{string title = (!string.IsNullOrEmpty(Model.QAProviderText) ? Model.ProviderText + "/" + Model.QAProviderText : Model.ProviderText);}
    <div title="@title" class="col-md-3 input-group">
        @{string Accepted = (string.IsNullOrEmpty(Model.QAProviderRemarks) ? "fa fa-check-circle fa-lg accept" : "fa fa-check-circle fa-lg");}
        @{string Rejected = (string.IsNullOrEmpty(Model.QAProviderRemarks) ? "fa fa-times-circle fa-lg" : "fa fa-times-circle fa-lg reject");}

        @Html.DropDownListFor(model => model.ProviderID, new SelectList(@ViewBag.Providers, "ID", "Name"), new { @class = "form-control CoderDetails ControlHeight" })
        <div class="input-group-append QACorrections ControlHeight">
            <span class="input-group-text AcceptRejectWidth_@tabIndex">
                &nbsp;<i id="ProviderID_@Model.TabIndex" data="@tabIndex" class="@Accepted AdjustAcceptReject_@tabIndex" aria-hidden="true"></i>
                &nbsp;<i id="ProviderID_@Model.TabIndex" data="@tabIndex" class="@Rejected AdjustReject_@tabIndex" aria-hidden="true"></i>
            </span>
        </div>
    </div>
    <div class="col-md-3 input-group">
        @Html.DropDownListFor(model => model.QAProviderID, new SelectList(@ViewBag.Providers, "ID", "Name"), "--Select--", new { @id = string.Format("ProviderID_{0}1", Model.TabIndex), @class = string.Format("form-control QARevised_{0} ControlHeight", Model.TabIndex), @style = (Model.QAProviderID == 0 ? "display:none" : "display:flex") })
        @Html.ValidationMessageFor(model => model.QAProviderID, null, new { @class = "text-danger errMsg" })
    </div>
    @{string Show = (string.IsNullOrEmpty(Model.QAProviderRemarks) ? "display:none" : "display:flex");}
    <div class="col-md-3 input-group">
        @Html.TextBoxFor(model => model.QAProviderRemarks, new { @title = Model.QAProviderRemarks, @style = Show, @class = string.Format("form-control QARevised_{0} ControlHeight", Model.TabIndex), @id = string.Format("ProviderID_{0}2", Model.TabIndex) })
        @Html.ValidationMessageFor(model => model.QAProviderRemarks, null, new { @class = "text-danger errMsg" })
    </div>
</div>
<div class="form-group row">
    <label class="col-md-3 lessWidth m-t-15">Payor</label>
    @{len = (!string.IsNullOrEmpty(Model.QAPayorText) ? 10 : 20); }
    @{string PayorText = (Model.PayorText?.Length > len) ? Model.PayorText.Substring(0, len) + ".." : Model.PayorText;}
    @{string QAPayorText = (Model.QAPayorText?.Length > len) ? "/" + Model.QAPayorText.Substring(0, len) + ".." : "/" + Model.QAPayorText;}
    @{title = (!string.IsNullOrEmpty(Model.QAPayorText) ? Model.PayorText + "/" + Model.QAPayorText : Model.PayorText);}
    <div title="@title" class="col-md-3 input-group">
        @{Accepted = (string.IsNullOrEmpty(Model.QAPayorRemarks) ? "fa fa-check-circle fa-lg accept" : "fa fa-check-circle fa-lg");}
        @{Rejected = (string.IsNullOrEmpty(Model.QAPayorRemarks) ? "fa fa-times-circle fa-lg" : "fa fa-times-circle fa-lg reject");}

        @Html.DropDownListFor(model => model.PayorID, new SelectList(@ViewBag.Payors, "ID", "Name"), new { @class = "form-control CoderDetails ControlHeight" })
        <div class="input-group-append QACorrections ControlHeight">
            <span class="input-group-text AcceptRejectWidth_@tabIndex">
                &nbsp;<i id="PayorID_@Model.TabIndex" data="@tabIndex" class="@Accepted AdjustAcceptReject_@tabIndex" aria-hidden="true"></i>
                &nbsp;<i id="PayorID_@Model.TabIndex" data="@tabIndex" class="@Rejected AdjustReject_@tabIndex" aria-hidden="true"></i>
            </span>
        </div>
    </div>
    <div class="col-md-3 input-group">
        @Html.DropDownListFor(model => model.QAPayorID, new SelectList(@ViewBag.Payors, "ID", "Name"), "--Select--", new { @id = string.Format("PayorID_{0}1", Model.TabIndex), @class = string.Format("form-control QARevised_{0} ControlHeight", Model.TabIndex), @style = (Model.QAPayorID == 0 ? "display:none" : "display:flex") })
        @Html.ValidationMessageFor(model => model.QAPayorID, null, new { @class = "text-danger errMsg" })
    </div>
    @{Show = (string.IsNullOrEmpty(Model.QAPayorRemarks) ? "display:none" : "display:flex");}
    <div class="col-md-3 input-group">
        @Html.TextBoxFor(model => model.QAPayorRemarks, new { @title = Model.QAPayorRemarks, @style = Show, @class = string.Format("form-control QARevised_{0} ControlHeight", Model.TabIndex), @id = string.Format("PayorID_{0}2", Model.TabIndex) })
        @Html.ValidationMessageFor(model => model.QAPayorRemarks, null, new { @class = "text-danger errMsg" })
    </div>
</div>
<div class="form-group row">
    <label class="col-md-3 lessWidth m-t-15">Note Title</label>
    <div title="@Model.NoteTitle" class="col-md-3">
        @Html.TextBoxFor(model => model.NoteTitle, new { @class = "form-control CoderDetails ControlHeight" })
    </div>
</div>
@{string QARevised = string.Format("QARevised_{0}", Model.TabIndex);}
<div id="DivDx_@tabIndex">
    @{
        int i = 1;

        int totalDxCount = Model.Dx.Split(",").Count() + 1;
        foreach (var item in Model.Dx.Split(","))
        {
            <div class="form-group row" id="@string.Format("DivDxRow_{0}_{1}", Model.TabIndex,i)">
                @if (i == 1)
                {
                    <label class="col-md-3 lessWidth m-t-15">Dx</label>
                }
                else
                {
                    <label class="col-md-3 lessWidth m-t-15"></label>
                }
                <div title="@item" class="col-md-3 input-group">
                    <div class="input-group-prepend ControlHeight">
                        <span class="input-group-text AdjustSerialNumber" id="basic-addon1">@i</span>
                    </div>
                    <input class="form-control CoderDetails ControlHeight valid" type="text" value="@item">
                    <div class="input-group-append ControlHeight">
                        <span class="input-group-text AcceptRejectWidth_@tabIndex QACorrections">
                            &nbsp;<i id="@string.Format("DxClaim_{0}_{1}", Model.TabIndex,i)" data="@tabIndex" class="fa fa-check-circle fa-lg AdjustAcceptReject_@tabIndex" aria-hidden="true"></i>
                            &nbsp;<i id="@string.Format("DxClaim_{0}_{1}", Model.TabIndex,i)" data="@tabIndex" class="fa fa-times-circle fa-lg AdjustReject_@tabIndex" aria-hidden="true"></i>
                        </span>
                    </div>
                </div>

                <div class="col-md-3 @QARevised input-group @string.Format("DxClaim_{0}_{1}", Model.TabIndex,i)" style="display:none">
                    <div class="input-group-prepend ControlHeight">
                        <span class="input-group-text AdjustSerialNumber" id="basic-addon1">@i</span>
                    </div>
                    <input type="text" id="@string.Format("txtDx_{0}_{1}", Model.TabIndex,i)" class="form-control ControlHeight txtDx @string.Format("DxClaim_{0}_{1}", Model.TabIndex,i)" autocomplete="off" tabindex="@i" placeholder="Code" value="@item" style="display:none" />
                </div>
                <div class="col-md-3 input-group">
                    @{ var dxRemarks = string.Format("DxRemarks_{0}_{1}", Model.TabIndex, i);}
                    <input type="text" id="@dxRemarks" onchange="removeClaimValid('@dxRemarks')" class="form-control @QARevised ControlHeight @string.Format("DxRemarks_{0}_{1}", Model.TabIndex,i) @string.Format("DxClaim_{0}_{1}", Model.TabIndex,i)" style="display:none" />
                    <span id="validDxRemarksClaim_@i" class="text-danger txtdanger" style="display:none">*</span>
                </div>
            </div>

            i = i + 1;
        }
    }
    <input type="hidden" id="@string.Format("txtDx_1_{0}", tabIndex)" value="@totalDxCount" />
    <div class="form-group row">
        <label class="col-md-3 lessWidth m-t-15"></label>
        <div class="col-md-3 input-group">
            <div class="input-group-prepend ControlHeight">
                <span class="input-group-text AdjustSerialNumber" id="basic-addon1">@totalDxCount</span>
            </div>
            <input class="form-control CoderDetails ControlHeight valid" type="text" value="">
            <div class="input-group-append ControlHeight">
                <span class="input-group-text AcceptRejectWidth_@tabIndex QACorrections">
                    &nbsp;<i data="@tabIndex" class="fa fa-edit fa-lg AdjustAcceptReject" aria-hidden="true" style="visibility:hidden"></i>
                    &nbsp;<i id="@string.Format("DxClaim_{0}_{1}", Model.TabIndex,totalDxCount)" data="@tabIndex" class="fa fa-times-circle fa-lg ignore" aria-hidden="true"></i>
                </span>
            </div>
        </div>
        <div class="col-md-3 newlyDxCpt_@tabIndex input-group @string.Format("DxClaim_{0}_{1}", Model.TabIndex,totalDxCount)" id="@Div2DxRow" style="display:none">
            <div class="input-group-prepend ControlHeight">
                <span class="input-group-text AdjustSerialNumber @dx2index" id="basic-addon1">@totalDxCount</span>
            </div>
            <input type="text" id="@string.Format("txtDx{0}Claim_{1}", Model.TabIndex,totalDxCount)" onfocusout="DxClaims('txtDx_1_@tabIndex')" class="form-control ControlHeight @Dx2Claim Dxclaim_@tabIndex" autocomplete="off" placeholder="Code" />
        </div>
        <div class="col-md-3 input-group @string.Format("DxClaim_{0}_{1}", Model.TabIndex,totalDxCount)" id="@Div2DxRow" style="display:none">
            <input type="text" id="@string.Format("DxRemarkss_{0}_{1}", Model.TabIndex, i)" class="form-control ControlHeight" style="display:flex;" />
            <span id="validDxRemarksClaim_@i" class="text-danger txtdanger" style="display:none">*</span>
        </div>
    </div>
</div>
<div id="DivCpt_@tabIndex">
    @{
        i = 1;
        int totalCptCount = Model.CPTCode.Split("|").Count() + 1;
        foreach (var item in Model.CPTCode.Split("|"))
        {
            string[] cptCodes = item.Split("^");
            string cptVal = cptCodes[0] == "NA" ? "" : cptCodes[0];
            string modVal = cptCodes[1] == "null" ? "" : cptCodes[1];
            string qtyVal = cptCodes[2];
            string linkAllVal = cptCodes[3] == "null" ? "" : cptCodes[3];
            <div class="form-group row" id="@string.Format("DivCptRow_{0}_{1}", Model.TabIndex,i)">
                @if (i == 1)
                {
                    <label class="col-md-3 lessWidth m-t-15">CPT</label>
                }
                else
                {
                    <label class="col-md-3 lessWidth m-t-15"></label>
                }
                @{string link = !string.IsNullOrEmpty(@linkAllVal) || @linkAllVal != "null" || @linkAllVal != "" ? @linkAllVal : "Link All"; }
                <div title="Code : @cptVal, Mod : @modVal, Quantity : @qtyVal, Links : @link" class="col-md-3 CptlessWidth input-group">
                    <div class="input-group-prepend ControlHeight">
                        <span class="input-group-text AdjustSerialNumber" id="basic-addon1">@i</span>
                    </div>
                    <input type="text" maxlength="5" style="min-width:50px;" class="form-control CoderDetails ControlHeight" autocomplete="off" placeholder="Code" value="@cptVal" />
                    <input type="text" style="min-width:42px;" class="form-control CoderDetails ControlHeight" autocomplete="off" placeholder="Mod" value="@modVal" />
                    <input type="text" style="max-width:23px;" class="form-control CoderDetails ControlHeight" autocomplete="off" placeholder="1" value="@qtyVal" />
                    <input type="text" class="form-control CoderDetails ControlHeight" autocomplete="off" placeholder="Link All" value="@linkAllVal" />
                    <div class="input-group-append ControlHeight">
                        <span class="input-group-text AcceptRejectWidth_@tabIndex">
                            &nbsp;<i id="@string.Format("Cpt_{0}_{1}", Model.TabIndex,i)" data="@tabIndex" class="fa fa-check-circle fa-lg AdjustAcceptReject_@tabIndex" aria-hidden="true"></i>
                            &nbsp;<i id="@string.Format("Cpt_{0}_{1}", Model.TabIndex,i)" data="@tabIndex" class="fa fa-times-circle fa-lg AdjustReject_@tabIndex" aria-hidden="true"></i>
                        </span>
                    </div>
                </div>
                <div class="col-md-3 @QARevised CptlessWidth input-group @string.Format("Cpt_{0}_{1}", Model.TabIndex,i)" style="display:none">
                    <div class="input-group-prepend ControlHeight">
                        <span class="input-group-text AdjustSerialNumber" id="basic-addon1">@i</span>
                    </div>
                    <input type="text" maxlength="5" style="min-width:50px;" class="form-control ControlHeight" id="@string.Format("txtCpt_{0}_{1}", Model.TabIndex,i)" autocomplete="off" placeholder="Code" value="@cptVal" />
                    <input type="text" style="min-width:42px;" class="form-control ControlHeight" id="@string.Format("txtMod_{0}_{1}", Model.TabIndex,i)" autocomplete="off" placeholder="Mod" value="@modVal" />
                    <input type="text" style="max-width:23px;" class="form-control ControlHeight" id="@string.Format("txtQty_{0}_{1}", Model.TabIndex,i)" autocomplete="off" placeholder="1" value="@qtyVal" />
                    <input type="text" class="form-control ControlHeight" id="@string.Format("txtLinks_{0}_{1}", Model.TabIndex,i)" autocomplete="off" placeholder="Link All" value="@linkAllVal" />
                </div>

                <div class="col-md-3 input-group">
                    <input type="text" id="@string.Format("CptRemarks_{0}_{1}", Model.TabIndex,i)" onchange="removeClaimValid('CptRemarks_@i')" class="form-control @QARevised ControlHeight @string.Format("CptRemarks_{0}_{1}", Model.TabIndex,i) @string.Format("Cpt_{0}_{1}", Model.TabIndex,i)" style="display:none" />
                    <span id="validCptRemarksClaim_@i" class="text-danger txtdanger" style="display:none">*</span>
                </div>
            </div>
            i = i + 1;
        }
    }
    <input type="hidden" id="@string.Format("txtLinks_1_{0}", tabIndex)" value="@totalCptCount" />
    <div class="form-group row">
        <label class="col-md-3 lessWidth m-t-15"></label>
        <div class="col-md-3 CptlessWidth input-group">
            <div class="input-group-prepend ControlHeight">
                <span class="input-group-text AdjustSerialNumber" id="basic-addon1">@totalCptCount</span>
            </div>
            <input type="text" maxlength="5" style="min-width:50px;" class="form-control CoderDetails ControlHeight" autocomplete="off" placeholder="Code" value="" />
            <input type="text" style="min-width:42px;" class="form-control CoderDetails ControlHeight" autocomplete="off" placeholder="Mod" value="" />
            <input type="text" style="max-width:23px;" class="form-control CoderDetails ControlHeight" autocomplete="off" placeholder="1" value="" />
            <input type="text" class="form-control CoderDetails ControlHeight" autocomplete="off" placeholder="Link All" value="" />
            <div class="input-group-append ControlHeight">
                <span class="input-group-text AcceptRejectWidth_@tabIndex">
                    &nbsp;<i data="@tabIndex" class="fa fa-edit fa-lg AdjustAcceptReject" aria-hidden="true" style="visibility:hidden"></i>
                    &nbsp;<i id="@string.Format("Cpt_{0}_{1}", Model.TabIndex,totalCptCount)" data="@tabIndex" class="fa fa-times-circle fa-lg ignore" aria-hidden="true"></i>
                </span>
            </div>
        </div>
        <div id="@Div2CptRow" class="col-md-3 newlyDxCpt_@tabIndex CptlessWidth input-group @string.Format("Cpt_{0}_{1}", Model.TabIndex,totalCptCount)" style="display:none">
            <div class="input-group-prepend ControlHeight">
                <span class="input-group-text AdjustSerialNumber @cpt2index" id="basic-addon1">@totalCptCount</span>
            </div>
            <input type="text" id="@cptClaim" maxlength="5" style="min-width:50px;" class="form-control ControlHeight Cptclaim_@tabIndex" autocomplete="off" placeholder="Code" value="" />
            <input type="text" id="@cptModClaim" style="min-width:42px;" class="form-control ControlHeight Cptclaim_@tabIndex" autocomplete="off" placeholder="Mod" value="" />
            <input type="text" id="@cptQtyClaim" style="max-width:23px;" class="form-control ControlHeight Cptclaim_@tabIndex" autocomplete="off" placeholder="1" value="" />
            <input type="text" id="@cptLinksClaim" class="form-control ControlHeight @Cpt2Link" autocomplete="off" placeholder="Link All" onfocusout="CptClaims('txtLinks_1_@tabIndex')" />
        </div>
        <div class="col-md-3 input-group @string.Format("Cpt_{0}_{1}", Model.TabIndex,totalCptCount)" id="@Div2CptRow" style="display:none">
            <input type="text" id="@string.Format("CptRemarkss_{0}_{1}", Model.TabIndex,i)" class="form-control ControlHeight" style="display:flex;" />
            <span id="validCptRemarksClaim_@i" class="text-danger txtdanger" style="display:none">*</span>
        </div>
    </div>
</div>
<div class="form-group row">
    <label class="col-md-3 lessWidth m-t-15">Provider Feedback</label>
    @{len = (!string.IsNullOrEmpty(Model.QAProviderFeedbackText) ? 10 : 20); }
    @{string ProviderFeedbackText = (Model.ProviderFeedbackText?.Length > len) ? Model.ProviderFeedbackText.Substring(0, len) + ".." : Model.ProviderFeedbackText;}
    @{string QAProviderFeedbackText = (Model.QAProviderFeedbackText?.Length > len) ? "/" + Model.QAProviderFeedbackText.Substring(0, len) + ".." : "/" + Model.QAProviderFeedbackText;}
    @{title = (!string.IsNullOrEmpty(Model.QAProviderFeedbackText) ? Model.ProviderFeedbackText + "/" + Model.QAProviderFeedbackText : Model.ProviderFeedbackText);}
    <div title="@title" class="col-md-3 input-group">
        @{ Accepted = (string.IsNullOrEmpty(Model.QAProviderFeedbackRemarks) ? "fa fa-check-circle fa-lg accept" : "fa fa-check-circle fa-lg");}
        @{ Rejected = (string.IsNullOrEmpty(Model.QAProviderFeedbackRemarks) ? "fa fa-times-circle fa-lg" : "fa fa-times-circle fa-lg reject");}

        @Html.DropDownListFor(model => model.ProviderFeedbackID, new SelectList(@ViewBag.ProviderFeedbacks, "ID", "Name"), "--Select--", new { @class = "form-control CoderDetails ControlHeight", @id = string.Format("Feedback_{0}", Model.TabIndex) })
        <div class="input-group-append ControlHeight">
            <span class="input-group-text AcceptRejectWidth_@tabIndex QACorrections">
                &nbsp;<i id="Feedback_@Model.TabIndex" data="@tabIndex" class="@Accepted AdjustAcceptReject_@tabIndex" aria-hidden="true"></i>
                &nbsp;<i id="Feedback_@Model.TabIndex" data="@tabIndex" class="@Rejected AdjustReject_@tabIndex" aria-hidden="true"></i>
            </span>
        </div>
    </div>
    @{Show = (string.IsNullOrEmpty(Model.QAProviderFeedbackRemarks) ? "display:none" : "display:flex");}
    <div class="col-md-3 input-group">
        @Html.DropDownListFor(model => model.QAProviderFeedbackID, new SelectList(@ViewBag.ProviderFeedbacks, "ID", "Name"), "--Select--", new { @style = Show, @class = string.Format("form-control QARevised_{0} ControlHeight", Model.TabIndex), @id = string.Format("Feedback_{0}1", Model.TabIndex) })
        @Html.ValidationMessageFor(model => model.QAProviderFeedbackID, null, new { @class = "text-danger errMsg" })
    </div>
    <div class="col-md-3 input-group">
        @Html.TextBoxFor(model => model.QAProviderFeedbackRemarks, new { @title = Model.QAProviderFeedbackRemarks, @style = Show, @class = string.Format("form-control QARevised_{0} ControlHeight", Model.TabIndex), @id = string.Format("Feedback_{0}2", Model.TabIndex) })
        @Html.ValidationMessageFor(model => model.QAProviderFeedbackRemarks, null, new { @class = "text-danger errMsg" })
    </div>
</div>
<div class="clearfix"></div>
<div class="card">
    <div class="card-body">
        <h4 class="card-title">QA Details</h4>
    </div>
    <div class="card-body">
        <div class="col-12">
            <div class="row mb-3">
                <div class="col-lg-6">
                    <div class="form-group row">
                        <label class="col-md-3 m-t-15">
                            Error Type
                        </label>
                        <div class="col-md-7">
                            @Html.DropDownListFor(model => model.QADTO.ErrorType, new SelectList(@ViewBag.ErrorTypes, "ID", "Name"), "--Select--", new { @class = "form-control ControlHeight", @id = string.Format("ErrorType_{0}", Model.TabIndex), @onchange = "ErrorType('" + tabIndex + "')" })
                            @Html.ValidationMessageFor(model => model.QADTO.ErrorType, null, new { @class = "text-danger ErrorType", @id = string.Format("ErrorTypeError_{0}", Model.TabIndex) })
                        </div>
                    </div>
                </div>
                <div class="col-lg-6">
                    <div class="form-group row">
                        @*<label class="col-md-5 m-t-15"></label>*@
                        <div class="col-md-15">
                            <a href="@Url.Action("GetCodingBlockedCharts", "UAB", new { Role = Roles.QA, ChartType = "Block", ProjectID = @Model.ProjectID, ProjectName = Model.ProjectName, ccid = Model.CodingDTO.ClinicalCaseID, plusorminus = "Previous" })" class="btn btn-success Available" id="btnPrevious" style="display:none">Previous</a>
                            <a href="@Url.Action("GetCodingBlockedCharts", "UAB", new { Role = Roles.QA, ChartType = "Block", ProjectID = @Model.ProjectID, ProjectName = Model.ProjectName, ccid = Model.CodingDTO.ClinicalCaseID, plusorminus = "Next" })" class="btn btn-success Available" id="btnNext" style="display:none">Next</a>
                            <button id="btnBlock" type="button" class="btn btn-danger" onclick="Block()">Block</button>
                            <button id="btnBlockHistory" style="display:none" type="button" class="btn btn-danger" onclick="BlockHistory()">Block History</button>
                            <button id="btnsubmit" type="button" class="btn btn-success">Save</button>
                            <button id="SubmitAndGetNext" name="SubmitAndGetNext" type="submit" value="SubmitAndGetNext" class="btn btn-success Available">Save And GetNext</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>