@model UAB.DTO.ChartSummaryDTO
@using UAB.enums
<style type="text/css">
    .col-md-3 {
        margin-left: 10px !important;
    }

    .form-control {
        padding: 0 !important;
    }
</style>
<div class="col-md-12">
    <div class="card">
        <div class="card-body">
            <h4 class="card-title"><span>Chart ID : <label style="color: black;">@Model.CodingDTO.ClinicalCaseID</label></span></h4>
        </div>
        @Html.HiddenFor(model => model.Dx)
        @Html.HiddenFor(model => model.CPTCode)
        @Html.HiddenFor(model => model.Links)
        @Html.HiddenFor(model => model.ProjectName)
        @Html.HiddenFor(model => model.ProjectID)
        @Html.HiddenFor(model => model.CodingDTO.ClinicalCaseID, new { @id = "ccid" })

        <!-- Tabs -->
        <div class="card">
            <div class="form-group row">
                <label class="col-md-3 m-t-15">Provider</label>
                <div class="col-md-3">
                    @Html.DropDownListFor(model => model.ProviderID, new SelectList(@ViewBag.Providers, "ID", "Name"), new { @class = "form-control CoderDetails" })
                    @Html.ValidationMessageFor(model => model.ProviderID, null, new { @class = "text-danger" })
                </div>
                <label class="col-md-3 m-t-15">Payor</label>
                <div class="col-md-3">
                    @Html.DropDownListFor(model => model.PayorID, new SelectList(@ViewBag.Payors, "ID", "Name"), "--Select--", new { @class = "form-control CoderDetails" })
                    @Html.ValidationMessageFor(model => model.PayorID, null, new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                <label class="col-md-3 m-t-15"> Feedback to Provider</label>
                <div class="col-md-3">
                    @Html.DropDownListFor(model => model.ProviderFeedbackID, new SelectList(@ViewBag.ProviderFeedbacks, "ID", "Name"), "--Select--", new { @class = "form-control CoderDetails" })
                    @Html.ValidationMessageFor(model => model.ProviderFeedbackID, null, new { @class = "text-danger" })
                </div>
                <label class="col-md-3 m-t-15">Note Title</label>
                <div class="col-md-3">
                    @Html.TextAreaFor(model => model.NoteTitle, new { @class = "form-control CoderDetails", @autocomplete = "off" })
                    @Html.ValidationMessageFor(model => model.NoteTitle, null, new { @class = "text-danger" })
                </div>
            </div>
            @{
                int i = 1;
                foreach (var item in Model.Dx.Split(','))
                {
                    <div class="form-group row">
                        @if (i == 1)
                        {
                            <label class="col-md-3 m-t-15">Dx</label>
                        }
                        else
                        {
                            <label class="col-md-3 m-t-15"></label>
                        }
                        <div class="col-md-3 input-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text" id="basic-addon1">@i</span>
                            </div>
                            <input class="form-control CoderDetails valid" type="text" value="@item">
                        </div>
                    </div>
                    i = i + 1;
                }
            }

            @{
                i = 1;
                foreach (var item in Model.CPTCode.Split('|'))
                {
                    string[] coderCptcodes = item.Split("^");
                    string mod = coderCptcodes[1] == "null" ? "Mod" : coderCptcodes[1];
                    string linkAll = coderCptcodes[3] == "null" ? "Link All" : coderCptcodes[3];
                    <div class="form-group row">
                        @if (i == 1)
                        {
                            <label class="col-md-3 m-t-15">CPT</label>
                        }
                        else
                        {
                            <label class="col-md-3 m-t-15"></label>
                        }
                        <div class="col-md-3 lessWidth input-group" style="max-width:20% !important;">
                            <div class="input-group-prepend">
                                <span class="input-group-text" id="basic-addon1">@i</span>
                            </div>
                            <input type="text" class="form-control CoderDetails" placeholder="Code" value="@coderCptcodes[0]" style="width:17px;" />
                            <input type="text" class="form-control CoderDetails" placeholder="Mod" value="@mod" />
                            <input type="text" class="form-control CoderDetails" placeholder="1" value="@coderCptcodes[2]" />
                            <input type="text" class="form-control CoderDetails" placeholder="Link All" value="@linkAll" />
                        </div>
                    </div>
                    i = i + 1;
                }
            }
        </div>
    </div>

    <div class="border-top">
        <div class="card-body" style="text-align:right">
            <button type="submit" class="btn btn-success Approved">Posting Completed</button>
            <button id="postingSubmitAndGetNext" name="postingSubmitAndGetNext" type="submit" value="postingSubmitAndGetNext" class="btn btn-success Approved">Post And GetNext</button>
            <a href="@Url.Action("CodingSummary","UAB")" class="btn btn-danger Approved">Close</a>
        </div>
    </div>
</div>
    </div>

