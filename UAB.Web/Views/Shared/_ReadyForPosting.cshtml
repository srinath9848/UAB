@model UAB.DTO.ChartSummaryDTO
@using UAB.enums
@*<style type="text/css">
        .col-md-3 {
            margin-left: 10px !important;
        }

        .form-control {
            padding: 0 !important;
        }
    </style>*@
<style type="text/css">
    .col-md-3 {
        margin-left: 10px !important;
    }

    .form-control {
        padding: 0 !important;
    }

    div.CptlessWidth {
        max-width: 20% !important;
    }

    .ControlHeight {
        height: 32px !important;
    }

    label.lessWidth {
        max-width: 12% !important;
    }

    .AlignControl {
        margin-right: -115px;
    }
</style>
<div class="col-md-12">
    <div class="card">
        @Html.HiddenFor(model => model.Dx)
        @Html.HiddenFor(model => model.CPTCode)
        @Html.HiddenFor(model => model.Links)
        @Html.HiddenFor(model => model.ProjectName)
        @Html.HiddenFor(model => model.ProjectID)
        @Html.HiddenFor(model => model.CodingDTO.ClinicalCaseID, new { @id = "ccid" })

        <div class="card">
            <ul class="nav nav-tabs" role="tablist">
                <li class="nav-item tabDiv1"> <a class="nav-link active tab" data-toggle="tab" id="1" alt="tabDiv1" href="#cliam1" role="tab"><span class="hidden-sm-up"></span> <span class="hidden-xs-down tabclick">Cliam 1</span></a> </li>
                <li class="nav-item tabDiv2" style="display:inherit;"> <a class="nav-link tab" data-toggle="tab" id="2" alt="tabDiv2" href="#cliam2" role="tab"> <span class="hidden-sm-up"></span> <span class="hidden-xs-down tabclick" id="htxt2">+</span></a><a id="deletecliam2" style="display:none;"><span class="btn btn-sm" onclick="Deletetabcliam('tabDiv_2')"><i class="fa fa-times"></i></span></a></li>
                <li class="nav-item tabDiv3" style="display:none;"> <a class="nav-link tab" data-toggle="tab" id="3" alt="tabDiv3" href="#cliam3" role="tab"><span class="hidden-sm-up"></span> <span class="hidden-xs-down tabclick" id="htxt3">+</span></a><a id="deletecliam3" style="display:none;"><span class="btn btn-sm" onclick="Deletetabcliam('tabDiv_3')"><i class="fa fa-times"></i></span></a> </li>
                <li class="nav-item tabDiv4" style="display:none;"> <a class="nav-link tab" data-toggle="tab" id="4" alt="tabDiv4" href="#cliam4" role="tab"><span class="hidden-sm-up"></span> <span class="hidden-xs-down tabclick" id="htxt4">+</span></a><a id="deletecliam4" style="display:none;"><span class="btn btn-sm" onclick="Deletetabcliam('tabDiv_4')"><i class="fa fa-times"></i></span></a> </li>
            </ul>
            <div class="tab-content tabcontent-border">
                <div class="tab-pane active" id="cliam1" role="tabpanel">
                    <div class="p-20" id="tabDiv1">
                        <br />
                        <div class="form-group row">
                            <label class="col-md-3 m-t-15 AlignControl">Provider</label>
                            <div class="col-md-3" style="display:inherit;">
                                @if (@Model.ProviderID != 0)
                                {
                                    @Html.DropDownListFor(model => model.ProviderID, new SelectList(@ViewBag.Providers, "ID", "Name"), "--Select--", new { @class = "form-control CoderDetails ControlHeight", @style = "pointer-events:none;background-color:#e9ecef" })
                                }
                                else
                                {
                                    @Html.DropDownListFor(model => model.ProviderID, new SelectList(@ViewBag.Providers, "ID", "Name"), "--Select--", new { @class = "form-control CoderDetails ControlHeight" })
                                }

                                @Html.ValidationMessageFor(model => model.ProviderID, null, new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="col-md-3 m-t-15 AlignControl">Payor</label>
                            <div class="col-md-3" style="display:inherit;">
                                @Html.DropDownListFor(model => model.PayorID, new SelectList(@ViewBag.Payors, "ID", "Name"), "--Select--", new { @class = "form-control CoderDetails ControlHeight" })
                                @Html.ValidationMessageFor(model => model.PayorID, null, new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group row">
                            <label class="col-md-3 m-t-15 AlignControl">Note Title</label>
                            <div class="col-md-3">
                                @Html.TextBoxFor(model => model.NoteTitle, new { @class = "form-control CoderDetails ControlHeight", @autocomplete = "off" })
                                @Html.ValidationMessageFor(model => model.NoteTitle, null, new { @class = "text-danger" })
                            </div>
                        </div>
                        <!--<div id="DivDx">
                        <div class="form-group row" id="DivDxRow_1">
                            <label class="col-md-3 m-t-15 AlignControl">Dx</label>
                            <div class="col-md-3 input-group">
                                <div class="input-group-prepend ControlHeight">
                                    <span class="input-group-text dxindex" id="basic-addon1">1</span>
                                </div>
                                @Html.TextBoxFor(model => model.Dx, new { @class = "form-control CoderDetails txtDx ControlHeight", @autocomplete = "off", @id = "txtDx_1", @placeholder = "Code", @onfocusout = "DxFunction('txtDx_1')" })
                                @Html.ValidationMessageFor(model => model.Dx, null, new { @class = "text-danger Dxerror" })-->
                        @*<button type="button" class="btn btn-sm" onclick="DeleteDxCodes('DivDxRow_1')"><i class="fa fa-times"></i></button>*@
                        <!--</div>
                            </div>
                        </div>
                        <div id="DivCpt">
                            <div class="form-group row" id="DivCptRow_1">
                                <label class="col-md-3 m-t-15 AlignControl">CPT</label>
                                <div class="col-md-3 CptlessWidth input-group">
                                    <div class="input-group-prepend ControlHeight">
                                        <span class="input-group-text cptindex" id="basic-addon1">1</span>
                                    </div>
                                    @Html.TextBoxFor(model => model.CPTCode, new { @class = "form-control CoderDetails txtCpt ControlHeight", @autocomplete = "off", @placeholder = "Code", @id = "txtCpt_1", @tabindex = "5" })
                                    <input type="text" class="form-control CoderDetails txtMod" id="txtMod_1" autocomplete="off" placeholder="Mod" tabindex="6" />
                                    <input type="text" id="txtQty_1" class="form-control CoderDetails txtQty" autocomplete="off" placeholder="1" value="1" tabindex="7" />
                                    <input type="text" id="txtLinks_1" onfocusout="CptFunction('txtLinks_1')" class="form-control CoderDetails txtLinks" autocomplete="off" placeholder="Link All" tabindex="8" />
                                    @Html.ValidationMessageFor(model => model.CPTCode, null, new { @class = "text-danger Dxerror" })-->
                        @*<button type="button" class="btn btn-sm" onclick="DeleteCptCodes('txtLinks_1')"><i class="fa fa-times"></i></button>*@
                        <!--</div>
                            </div>
                        </div>-->
                        @{
                            int i = 1;
                            foreach (var item in Model.Dx.Split(','))
                            {
                                <div class="form-group row">
                                    @if (i == 1)
                                    {
                                        <label class="col-md-3 m-t-15 AlignControl">Dx</label>
                                    }
                                    else
                                    {
                                        <label class="col-md-3 m-t-15 AlignControl"></label>
                                    }
                                    <div class="col-md-3 input-group">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text" id="basic-addon1">@i</span>
                                        </div>
                                        <input class="form-control CoderDetails valid" type="text" value="@item">
                                    </div>
                                </div>
                                i = i + 1;
                            }
                        }

                        @{
                            i = 1;
                            foreach (var item in Model.CPTCode.Split('|'))
                            {
                                string[] coderCptcodes = item.Split("^");
                                string mod = coderCptcodes[1] == "null" ? "" : coderCptcodes[1];
                                string linkAll = coderCptcodes[3] == "null" ? "" : coderCptcodes[3];
                                <div class="form-group row">
                                    @if (i == 1)
                                    {
                                        <label class="col-md-3 m-t-15 AlignControl">CPT</label>
                                    }
                                    else
                                    {
                                        <label class="col-md-3 m-t-15 AlignControl"></label>
                                    }
                                    <div class="col-md-3 lessWidth input-group" style="max-width:20% !important;">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text" id="basic-addon1">@i</span>
                                        </div>
                                        <input type="text" class="form-control CoderDetails" placeholder="Code" value="@coderCptcodes[0]" style="width:17px;" />
                                        <input type="text" class="form-control CoderDetails" placeholder="Mod" value="@mod" />
                                        <input type="text" class="form-control CoderDetails" placeholder="1" value="@coderCptcodes[2]" />
                                        <input type="text" class="form-control CoderDetails" placeholder="Link All" value="@linkAll" />
                                    </div>
                                </div>
                                i = i + 1;
                            }
                        }
                        <div class="form-group row">
                            <label class="col-md-3 m-t-15 AlignControl">Provider Feedback</label>
                            <div class="col-md-3">
                                @Html.DropDownListFor(model => model.ProviderFeedbackID, new SelectList(@ViewBag.ProviderFeedbacks, "ID", "Name"), "--Select--", new { @class = "form-control CoderDetails ControlHeight" })
                                @Html.ValidationMessageFor(model => model.ProviderFeedbackID, null, new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="tab-pane" id="cliam2" role="tabpanel">
                    <div class="p-20" id="tabDiv2">
                    </div>
                </div>
                <div class="tab-pane" id="cliam3" role="tabpanel">
                    <div class="p-20" id="tabDiv3">
                    </div>
                </div>
                <div class="tab-pane" id="cliam4" role="tabpanel">
                    <div class="p-20" id="tabDiv4">
                    </div>
                </div>
            </div>
        </div>
        <!-- Tabs -->
        @*<div class="card">
                <div class="form-group row">
                    <label class="col-md-3 m-t-15">Provider</label>
                    <div class="col-md-3">
                        @Html.DropDownListFor(model => model.ProviderID, new SelectList(@ViewBag.Providers, "ID", "Name"), new { @class = "form-control CoderDetails" })
                        @Html.ValidationMessageFor(model => model.ProviderID, null, new { @class = "text-danger" })
                    </div>
                    <label class="col-md-3 m-t-15">Payor</label>
                    <div class="col-md-3">
                        @Html.DropDownListFor(model => model.PayorID, new SelectList(@ViewBag.Payors, "ID", "Name"), "--Select--", new { @class = "form-control CoderDetails" })
                        @Html.ValidationMessageFor(model => model.PayorID, null, new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group row">
                    <label class="col-md-3 m-t-15"> Provider Feedback</label>
                    <div class="col-md-3">
                        @Html.DropDownListFor(model => model.ProviderFeedbackID, new SelectList(@ViewBag.ProviderFeedbacks, "ID", "Name"), "--Select--", new { @class = "form-control CoderDetails" })
                        @Html.ValidationMessageFor(model => model.ProviderFeedbackID, null, new { @class = "text-danger" })
                    </div>
                    <label class="col-md-3 m-t-15">Note Title</label>
                    <div class="col-md-3">
                        @Html.TextAreaFor(model => model.NoteTitle, new { @class = "form-control CoderDetails", @autocomplete = "off" })
                        @Html.ValidationMessageFor(model => model.NoteTitle, null, new { @class = "text-danger" })
                    </div>
                </div>
                @{
                    int i = 1;
                    foreach (var item in Model.Dx.Split(','))
                    {
                        <div class="form-group row">
                            @if (i == 1)
                            {
                                <label class="col-md-3 m-t-15">Dx</label>
                            }
                            else
                            {
                                <label class="col-md-3 m-t-15"></label>
                            }
                            <div class="col-md-3 input-group">
                                <div class="input-group-prepend">
                                    <span class="input-group-text" id="basic-addon1">@i</span>
                                </div>
                                <input class="form-control CoderDetails valid" type="text" value="@item">
                            </div>
                        </div>
                        i = i + 1;
                    }
                }

                @{
                    i = 1;
                    foreach (var item in Model.CPTCode.Split('|'))
                    {
                        string[] coderCptcodes = item.Split("^");
                        string mod = coderCptcodes[1] == "null" ? "" : coderCptcodes[1];
                        string linkAll = coderCptcodes[3] == "null" ? "" : coderCptcodes[3];
                        <div class="form-group row">
                            @if (i == 1)
                            {
                                <label class="col-md-3 m-t-15">CPT</label>
                            }
                            else
                            {
                                <label class="col-md-3 m-t-15"></label>
                            }
                            <div class="col-md-3 lessWidth input-group" style="max-width:20% !important;">
                                <div class="input-group-prepend">
                                    <span class="input-group-text" id="basic-addon1">@i</span>
                                </div>
                                <input type="text" class="form-control CoderDetails" placeholder="Code" value="@coderCptcodes[0]" style="width:17px;" />
                                <input type="text" class="form-control CoderDetails" placeholder="Mod" value="@mod" />
                                <input type="text" class="form-control CoderDetails" placeholder="1" value="@coderCptcodes[2]" />
                                <input type="text" class="form-control CoderDetails" placeholder="Link All" value="@linkAll" />
                            </div>
                        </div>
                        i = i + 1;
                    }
                }
            </div>*@
    </div>

    <div class="border-top">
        <div class="card-body" style="text-align:right">
            <button type="submit" class="btn btn-success Approved">Posting Completed</button>
            <button id="postingSubmitAndGetNext" name="postingSubmitAndGetNext" type="submit" value="postingSubmitAndGetNext" class="btn btn-success Approved">Post And GetNext</button>
            <a href="@Url.Action("CodingSummary","UAB")" class="btn btn-danger Approved">Close</a>
        </div>
    </div>
</div>

<script src="~/dashboardassets/libs/jquery/dist/jquery.min.js"></script>
<script src="~/dashboardassets/libs/jquery-validation/dist/jquery.validate.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.11/jquery.validate.unobtrusive.min.js" type="text/javascript"></script>
<script src="~/dashboardassets/extra-libs/DataTables/datatables.js"></script>
