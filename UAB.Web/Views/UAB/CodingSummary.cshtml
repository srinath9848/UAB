@using UAB.enums
@model List<UAB.DTO.DashboardDTO>
@{
    ViewData["Title"] = "CodingSummary";
}
<style type="text/css">
    .highlight {
        background-color: #a8cb17 !important;
    }
</style>

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <h4 class="card-title">Projects</h4><br />
                    @await Html.PartialAsync("_Msg")
                </div>
                <table class="table table-striped table-bordered dataTable workcontexts">
                    <thead>
                        <tr>
                            <th scope="col">
                                <b>Name</b>
                            </th>
                            <th scope="col" style="text-align:center">
                                <b>Available Charts</b>
                            </th>
                            <th scope="col" style="text-align:center">
                                <b>Incorrect Charts</b>
                            </th>
                            <th scope="col" style="text-align:center">
                                <b>ReadyForPosting Charts</b>
                            </th>
                        </tr>
                    </thead>
                    <tbody style="cursor:pointer;">
                        @foreach (var item in Model.GroupBy(x => x.ProjectName).Select(x => x.FirstOrDefault()).ToList())
                        {

                            <tr>
                                <td scope="col">
                                    @item.ProjectName
                                </td>
                                <td scope="col" style="text-align:center">
                                    @{
                                        int AvailableCount = Model.Where(x => x.ProjectName == item.ProjectName && x.StatusID == (int)Statuses.ReadyForCoding).Select(x => x.Cnt).FirstOrDefault();
                                    }
                                    @if (AvailableCount == 0)
                                    {
                                        @AvailableCount
                                        <b>&nbsp;&nbsp; &nbsp; &nbsp;</b>
                                        <a href="@Url.Action("Coding", "UAB")" style="pointer-events: none;" class="btn btn-info btn-sm">Get Next</a>
                                    }
                                    else
                                    {
                                        @AvailableCount
                                        <b>&nbsp; &nbsp; &nbsp; &nbsp;</b>
                                        <a href="@Url.Action("Coding", "UAB",new { StatusIDs = Convert.ToString((int)Statuses.ReadyForCoding),ProjectID = item.ProjectID})" class="btn btn-info btn-sm">Get Next</a>
                                    }
                                </td>
                                <td scope="col" style="text-align:center">
                                    @{
                                        List<int> lstStatus = new List<int> { (int)Statuses.QARejected, (int)Statuses.ShadowQARejected };

                                        int IncorrectCount = Model.Where(x => x.ProjectName == item.ProjectName && (x.StatusID == (int)Statuses.QARejected || x.StatusID == (int)Statuses.ShadowQARejected)).Select(x => x.Cnt).FirstOrDefault();
                                    }
                                    @if (IncorrectCount == 0)
                                    {
                                        @IncorrectCount
                                        <b>&nbsp;&nbsp; &nbsp; &nbsp;</b>
                                        <a href="@Url.Action("IncorrectCharts", "UAB")" style="pointer-events: none;" class="btn btn-info btn-sm">Get Next</a>
                                    }
                                    else
                                    {
                                        @IncorrectCount
                                        <b>&nbsp; &nbsp; &nbsp; &nbsp;</b>
                                        <a href="@Url.Action("IncorrectCharts", "UAB",new { StatusIDs = string.Join(",", lstStatus),ProjectID = item.ProjectID})" class="btn btn-info btn-sm">Get Next</a>
                                    }
                                </td>
                                <td scope="col" style="text-align:center">
                                    @{
                                        int ApprovedCount = Model.Where(x => x.ProjectName == item.ProjectName && x.StatusID == 3).Select(x => x.Cnt).FirstOrDefault();
                                    }
                                    @if (ApprovedCount == 0)
                                    {
                                        @ApprovedCount
                                        <b>&nbsp;&nbsp; &nbsp; &nbsp;</b>
                                        <a href="@Url.Action("ApprovedCharts", "UAB")" style="pointer-events: none;" class="btn btn-info btn-sm">Get Next</a>
                                    }
                                    else
                                    {
                                        @ApprovedCount
                                        <b>&nbsp; &nbsp; &nbsp; &nbsp;</b>
                                        <a href="@Url.Action("ApprovedCharts", "UAB",new { StatusIDs = Convert.ToString((int)Statuses.ReadyForPosting),ProjectID = item.ProjectID})" class="btn btn-info btn-sm">Get Next</a>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
