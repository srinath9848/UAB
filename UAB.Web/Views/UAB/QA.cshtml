@model List<UAB.DTO.ChartSummaryDTO>
@{
    ViewData["Title"] = "QA";
}
<form asp-action="SubmitQAAvailableChart" id="form1" asp-controller="UAB" method="POST">
    <div class="container-fluid">
        <div class="row">
            <partial name="_InitialData" model=Model.FirstOrDefault() />
            <partial name="_RebuttalChartDetails" model=Model />
        </div>
        @if (Model.FirstOrDefault().BlockResponseDTO.ResponseRemarks != null)
        {
            <partial name="_BlockResponsePopUp" model=Model.FirstOrDefault() />
        }
    </div>
</form>
<script src="~/dashboardassets/libs/jquery/dist/jquery.min.js"></script>
<script src="~/dashboardassets/libs/jquery-validation/dist/jquery.validate.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.11/jquery.validate.unobtrusive.min.js" type="text/javascript"></script>
<script type="text/javascript">

    $(".CoderDetails").css("pointer-events", "none");
    $(".CoderDetails").css("background-color", "#e9ecef");
    $('.CoderDetails').attr('disabled', true);
    $(".QADetails").attr("readonly", false);
    $("#qa").addClass('selected');
    $(".accept").removeClass('accept');

    var isBlocked = @(ViewBag.IsBlocked == null ? "0": "1");
    var enableNext = @(ViewBag.EnableNext == null ? "false": ViewBag.EnableNext);
    var enablePrevious = @(ViewBag.EnablePrevious == null ? "false" : ViewBag.EnablePrevious);

    if (isBlocked == 1) {
        $(".clsbtnBlock").hide();
        $(".clsbtnBlockHistory").show();

        if (enablePrevious == true) {
            $(".clsPrevious").css({
                'opacity': '100', 'pointer-events': 'auto'
            });
        } else {
            $(".clsPrevious").css({
                'opacity': '0.65', 'pointer-events': 'none'
            });
        }
        if (enableNext == true) {
            $(".clsNext").css({
                'opacity': '100', 'pointer-events': 'auto'
            });
        } else {
            $(".clsNext").css({
                'opacity': '0.65', 'pointer-events': 'none'
            });
        }
    }
    else {
        $(".clsPrevious").hide();
        $(".clsNext").hide();
    }

    CheckAllboxes = function (chkAll) {
        var chk = $("#" + chkAll).is(':checked');
        var id = chkAll.split("_")[1];
        if (chk) {
            $(".txtdanger").hide();
            if (id == "1") {
                $('.QARevised').css("display", "none");
                $(".QARevised").val('');
                $(".QADxRevised_" + id).css("display", "none");
                $(".QACptRevised_" + id).css("display", "none");
            } else {
                $(".QARevised_" + id).css("display", "none");
            }

            $("[class*=AdjustReject_" + id + "]").removeClass('reject');
            $("[class*=AdjustAcceptReject_" + id +"]").addClass('accept');

            $(".CodingDetails").hide();
            $(".errMsg").text('');
            $("#ErrorType_" + id).css("pointer-events", "none");
            $("#ErrorTypeError_" + id).text('');
            $(".QACorrectionsComments").hide();
            var ignoreDxs = $("#claim" + id + " [class*=ignore]");
            for (var i = 0; i < ignoreDxs.length; i++) {
                var id = $(ignoreDxs[i]).attr("id");
                $("#" + id).removeClass("fa fa-times-circle fa-lg ignore reject");
                $("#" + id).addClass("fa fa-times-circle fa-lg ignore");
            }
        }
        else {
            $("[class*=AdjustAcceptReject_" + id +"]").removeClass('accept');
            $("#ErrorType_" + id).css("pointer-events", "auto");
        }
    }

    $('span i').click(function () {
        var id = $(this).attr('id');
        var tabIndex = $(this).attr('data');
        var iconid = id.split("_")[1];
        if (tabIndex =="1") {
            if ($(this).hasClass('fa-check-circle')) {
                $(this).toggleClass('accept');
                $(this).siblings().removeClass('reject');
                $("." + id).css("display", "none");
                $("#" + id + "1").css("display", "none");
                $("#" + id + "2").css("display", "none");
                $("#" + id + "1").val('');
                $("." + id).val('');
                $("#" + id + "2").val('');
                var total = $(".AcceptRejectWidth_1").find(".fa-check-circle").length;
                var accept = $(".AcceptRejectWidth_1").find(".accept").length;
                if (total == accept) {
                    var idclass = $(".newlyDxCpt_" + tabIndex).css("display") == "flex";
                    if (idclass == false) {
                        $("#chkAll_1").prop('checked', true);
                        $("#ErrorTypeError_1").val('');
                        $("#ErrorType_1").css("pointer-events", "none");
                        $(".ErrorType").text('');
                        $(".errMsg").text('');
                        $(".QACorrectionsComments").hide();
                    }
                }
            }
            else if ($(this).hasClass('fa-times-circle')) {
                $(this).toggleClass('reject');
                $(this).siblings().removeClass('accept');
                var idclass= $("#" + id).attr('class');
                if (idclass == "fa fa-times-circle fa-lg ignore") {
                    $("." + id).css("display", "none");
                    var total = $(".AcceptRejectWidth_1").find(".fa-check-circle").length;
                    var accept = $(".AcceptRejectWidth_1").find(".accept").length;
                    if (total == accept) {
                        $("#chkAll_1").prop('checked', true);
                        $("#ErrorTypeError_1").val('');
                        $("#ErrorType_1").css("pointer-events", "none");
                        $(".ErrorType").text('');
                        $(".errMsg").text('');
                        $(".QACorrectionsComments").hide();
                    }
                }
                else {

                    $("." + id).css("display", "flex");
                    $("#" + id + "1").css("display", "flex");
                    $("#" + id + "2").css("display", "flex");
                    $("#chkAll_1").prop('checked', false);
                    $("#ErrorType_1").css("pointer-events", "auto");
                    $(".QACorrectionsComments").show();
                }
            }
        } else {
            if ($(this).hasClass('fa-check-circle')) {
                $(this).toggleClass('accept');
                $(this).siblings().removeClass('reject');
                $("." + id).css("display", "none");
                $("#" + id + "1").css("display", "none");
                $("#" + id + "2").css("display", "none");
                $("#" + id + "1").val('');
                $("." + id).val('');
                $("#" + id + "2").val('');
                var total = $(".AcceptRejectWidth_" + iconid).find(".fa-check-circle").length;
                var accept = $(".AcceptRejectWidth_" + iconid).find(".accept").length;
                if (total == accept) {
                    var idclass = $(".newlyDxCpt_" + tabIndex).css("display") == "flex";
                    if (idclass == false) {
                        $("#chkAll_" + iconid).prop('checked', true);
                        $("#ErrorTypeError_" + iconid).val('');
                        $("#ErrorType_" + iconid).css("pointer-events", "none");
                        $(".ErrorType_" + iconid).text('');
                        $(".errMsg").text('');
                        $(".QACorrectionsComments_" + iconid).hide();
                    }
                }
            }
            else if ($(this).hasClass('fa-times-circle')) {
                $(this).toggleClass('reject');
                $(this).siblings().removeClass('accept');
                var idclass = $("#" + id).attr('class');
                if (idclass == "fa fa-times-circle fa-lg ignore") {
                    $("." + id).css("display", "none");
                    var total = $(".AcceptRejectWidth_" + iconid).find(".fa-check-circle").length;
                    var accept = $(".AcceptRejectWidth_" + iconid).find(".accept").length;
                    if (total == accept) {
                        $("#chkAll_" + iconid).prop('checked', true);
                        $("#ErrorTypeError_" + iconid).val('');
                        $("#ErrorType_" + iconid).css("pointer-events", "none");
                        $(".ErrorType_" + iconid).text('');
                        $(".errMsg").text('');
                        $(".QACorrectionsComments_" + iconid).hide();
                    }
                }
                else {
                    $("." + id).css("display", "flex");
                    $("#" + id + "1").css("display", "flex");
                    $("#" + id + "2").css("display", "flex");
                    $("#chkAll_" + iconid).prop('checked', false);
                    $("#ErrorType_" + iconid).css("pointer-events", "auto");
                    $(".QACorrectionsComments_" + iconid).show();
                }
            }
        }
    });

    ErrorType = function (id) {
        if ($("#ErrorType_" + id).val() != "") {
            $("#ErrorTypeError_"+id).text('');
        }
    }


    $(document).on('click', '#btnsubmit,#SubmitAndGetNext', function (e) {

        $('.CoderDetails').removeAttr('disabled');
        var currentdate = new Date();
        //Format: DD/MM/YYYY
        var datetime = currentdate.getDate() + "/"
            + (currentdate.getMonth() + 1) + "/"
            + currentdate.getFullYear();

        $("#hdnCurrDate").val(datetime);

        //Starting of reading Claim2 to Claim4 Data
        $(".tab").each(function () {
            var id = $(this).attr('id');
            //if (id != "1") {
            var tabid = id.split("tabIndex_")[1].split("_ClaimId_")[0];
            var claimId = id.split("tabIndex_")[1].split("_ClaimId_")[1];
            var ErrorTypeID = $("#ErrorType_" + tabid).val();
            $("#hdnQAErrorTypeID" + tabid).val(ErrorTypeID);
                $("#hdnClaimId" + tabid).val(claimId);
                var ProviderID = "";
                var PayorID = "";
                var ProviderFeedbackID = "";
                var ProviderRemarks = "";
                var payorRemarks = "";
                var FeedbackRemarks = "";
                $("#hdnClaim" + tabid).val('');
            $("#hdnAcceptedClaim" + tabid).val('');
            var res2 = $("[id=" + "ProviderID_" + tabid + "]:eq(1)").attr('class');
            if (res2.includes('reject')) {
                ProviderID = $("#QAProviderID_" + tabid).val();
                ProviderRemarks = $("#QAProviderIDRemarks_" + tabid).val();
                if ($("#hdnClaim" + tabid).val() == "") {
                    $("#hdnClaim" + tabid).val("ClaimId" + "," + claimId + "^" + "ProviderID" + "," + ProviderID + "," + ProviderRemarks);
                }
            } else {
                ProviderID = $("#CoderProviderID_" + tabid).val();
                if (ProviderID != "0" && ProviderID !="") {
                    if ($("#hdnAcceptClaim" + tabid).val() == "") {
                        $("#hdnAcceptClaim" + tabid).val("ClaimId" + "," + claimId + "^" + "ProviderID" + "," + ProviderID);
                    }
                }
            }

            var res2 = $("[id=" + "PayorID_" + tabid + "]:eq(1)").attr('class');
            if (res2.includes('reject')) {
                PayorID = $("#QAPayorID_" + tabid).val();
                payorRemarks = $('#QAPayorIDRemarks_' + tabid).val();
                if ($("#hdnClaim" + tabid).val() == "") {
                    $("#hdnClaim" + tabid).val("ClaimId" + "," + claimId + "^" + "PayorID" + "," + PayorID + "," + payorRemarks);
                } else {
                    $("#hdnClaim" + tabid).val($("#hdnClaim" + tabid).val() + "^" + "PayorID" + "," + PayorID + "," + payorRemarks);
                }
            }
            else {
                PayorID = $("#CoderPayorID_" + tabid).val();
                if (PayorID != "0" && PayorID != "") {
                    if ($("#hdnAcceptClaim" + tabid).val() == "") {
                        $("#hdnAcceptClaim" + tabid).val("ClaimId" + "," + claimId + "^" + "PayorID" + "," + PayorID);
                    } else {
                        $("#hdnAcceptClaim" + tabid).val($("#hdnAcceptClaim" + tabid).val() + "^" + "PayorID" + "," + PayorID);
                    }
                }
            }

            var res2 = $("[id=" + "Feedback_" + tabid + "]:eq(1)").attr('class');
            if (res2.includes('reject')) {
                if ($("#QAProviderFeedback_" + tabid).val() != "" && $('#QAProviderFeedbackRemarks_' + tabid).val() != "") {
                    ProviderFeedbackID = $("#QAProviderFeedback_" + tabid).val();
                    FeedbackRemarks = $('#QAProviderFeedbackRemarks_' + tabid).val();
                }
                else
                    ProviderFeedbackID = 0;

                if ($("#hdnClaim" + tabid).val() == "") {
                    $("#hdnClaim" + tabid).val("ClaimId" + "," + claimId + "^" + "ProviderFeedbackID" + "," + ProviderFeedbackID + "," + FeedbackRemarks);
                } else {
                    $("#hdnClaim" + tabid).val($("#hdnClaim" + tabid).val() + "^" + "ProviderFeedbackID" + "," + ProviderFeedbackID + "," + FeedbackRemarks);
                }
            }
            else {
                if ($("#CoderFeedback_" + tabid).val() != "")
                    ProviderFeedbackID = $("#CoderFeedback_" + tabid).val();
                else
                    ProviderFeedbackID = 0;

                    if ($("#hdnAcceptClaim" + tabid).val() == "") {
                        $("#hdnAcceptClaim" + tabid).val("ClaimId" + "," + claimId + "^" + "ProviderFeedbackID" + "," + ProviderFeedbackID);
                    } else {
                        $("#hdnAcceptClaim" + tabid).val($("#hdnAcceptClaim" + tabid).val() + "^" + "ProviderFeedbackID" + "," + ProviderFeedbackID);
                    }
            }

            if (id != "1") {
                // Dx & Remarks

                var DxNewClaimremarks = $("[id*=DxRemarkss_" + tabid + "_]");
                $("#hdnQADxCodes" + tabid).val("");
                $("#hdnQADxRemarks" + tabid).val("");
                var index = 1;
                for (var i = 0; i < DxNewClaimremarks.length; i++) {
                    var id = parseInt($(DxNewClaimremarks[i]).attr("id").split("_")[2]);
                    if ($(DxNewClaimremarks[i]).css("display") == "flex") {
                        if ($(DxNewClaimremarks[i]).val() != "") {
                            if ($("#hdnQADxRemarks" + tabid).val() == "")
                                $("#hdnQADxRemarks" + tabid).val(id + "^" + $(DxNewClaimremarks[i]).val());
                            else
                                $("#hdnQADxRemarks" + tabid).val($("#hdnQADxRemarks" + tabid).val() + "|" + id + "^" + $(DxNewClaimremarks[i]).val());
                            if ($("#txtDx" + tabid + "Claim_" + index).val() != "") {
                                $("#validDxRemarksClaim_" + tabid + "_" + id).hide();

                                if ($("#hdnQADxCodes" + tabid).val() == "") {
                                    $("#hdnQADxCodes" + tabid).val(id + "^" + $("#txtDx" + tabid + "Claim_" + index).val());
                                    $("#hdnQAErrorTypeID" + tabid).val(ErrorTypeID);
                                }
                                else {
                                    $("#hdnQADxCodes" + tabid).val($("#hdnQADxCodes" + tabid).val() + "|" + id + "^" + $("#txtDx" + tabid + "Claim_" + index).val());
                                    $("#hdnQAErrorTypeID" + tabid).val(ErrorTypeID);
                                }
                            }
                            else {
                                var chk = $("#chkAll_" + tabid).is(':checked');
                                if (!chk) {
                                    $("#txtDx" + tabid + "Claim_" + index).focus();
                                    $("#validDxRemarksClaim_" + tabid + "_" + id).show();
                                }
                            }
                        }
                        else {
                            var chk = $("#chkAll_" + tabid).is(':checked');
                            if (!chk) {
                                $(DxNewClaimremarks[i]).focus();
                                $("#validDxRemarksClaim_" + tabid + "_" + id).show();
                            }
                        }
                    } else {
                        if ($("#hdnQAAcceptDxCodes" + tabid).val() == "") {
                            if ($(".txtQADx_" + tabid + "_" + id).val() != undefined && $(".txtQADx_" + tabid + "_" + id).val() != "") {
                                $("#hdnQAAcceptDxCodes" + tabid).val(id + "^" + $(".txtQADx_" + tabid + "_" + id).val());
                            }
                        }
                       else {
                            if ($(".txtQADx_" + tabid + "_" + id).val() != undefined && $(".txtQADx_" + tabid + "_" + id).val() !="") {
                               $("#hdnQAAcceptDxCodes" +  tabid).val($("#hdnQAAcceptDxCodes" + tabid).val() + "|" + id + "^" + $(".txtQADx_" + tabid + "_" + id).val());
                           }
                       }
                    }
                    index = index + parseInt(1);
                }


                // Cpt & Remarks

                var CptNewClaimRemarks = $("[id*=CptRemarkss_" + tabid + "_]");
                $("#hdnQACptRemarks" + tabid).val("");
                $("#hdnQACptCodes" + tabid).val("");
                var index = 1;
                for (var i = 0; i < CptNewClaimRemarks.length; i++) {
                    var id = parseInt($(CptNewClaimRemarks[i]).attr("id").split("_")[2]);

                    if ($(CptNewClaimRemarks[i]).css("display") == "flex") {
                        if ($(CptNewClaimRemarks[i]).val() != "") {
                            if ($("#hdnQACptRemarks" + tabid).val() == "")
                                $("#hdnQACptRemarks" + tabid).val(id + "^" + $(CptNewClaimRemarks[i]).val());
                            else
                                $("#hdnQACptRemarks" + tabid).val($("#hdnQACptRemarks" + tabid).val() + "|" + id + "^" + $(CptNewClaimRemarks[i]).val());

                            if ($("#txt" + tabid + "Cpt_" + index).val() != "" && $("#txt" + tabid + "Cpt_" + index).val() != undefined) {
                                $("#validCptRemarksClaim_" + tabid + "_" + id).hide();

                                if ($("#hdnQACptCodes" + tabid).val() == "") {
                                    var mod = $("#txt" + tabid + "mod_" + index).val() != "" ? $("#txt" + tabid + "mod_" + index).val() : null;
                                    var qty = $("#txt" + tabid + "qty_" + index).val() != "" ? $("#txt" + tabid + "qty_" + index).val() : null;
                                    var links = $("#txt" + tabid + "links_" + index).val() != "" ? $("#txt" + tabid + "links_" + index).val() : null;
                                    $("#hdnQACptCodes" + tabid).val(id + "^" + $("#txt" + tabid + "Cpt_" + index).val() + "^" + mod + "^" + qty + "^" + links);
                                    $("#hdnQAErrorTypeID" + tabid).val(ErrorTypeID);
                                }
                                else {
                                        var mod = $("#txt" + tabid + "mod_" + index).val() != "" ? $("#txt" + tabid + "mod_" + index).val() : null;
                                        var qty = $("#txt" + tabid + "qty_" + index).val() != "" ? $("#txt" + tabid + "qty_" + index).val() : null;
                                        var links = $("#txt" + tabid + "links_" + index).val() != "" ? $("#txt" + tabid + "links_" + index).val() : null;
                                        $("#hdnQACptCodes" + tabid).val($("#hdnQACptCodes" + tabid).val() + "|" + id + "^" + $("#txt" + tabid + "Cpt_" + index).val() + "^" + mod + "^" + qty + "^" + links);
                                        $("#hdnQAErrorTypeID" + tabid).val(ErrorTypeID);
                                }
                            }
                            else {
                                var chk = $("#chkAll_" + tabid).is(':checked');
                                if (!chk) {
                                    $("#txt" + tabid + "Cpt_" + index).focus();
                                    $("#validCptRemarksClaim_" + tabid + "_" + id).show();
                                }
                            }

                        }
                        else {
                            var chk = $("#chkAll_" + tabid).is(':checked');
                            if (!chk) {
                                $(CptNewClaimRemarks[i]).focus();
                                $("#validCptRemarksClaim_" + tabid + "_" + id).show();
                            }

                        }
                    }
                    else {
                        if ($("#hdnQAAcceptCptCodes" + tabid).val() == "") {
                            if ($(".txtQACpt_" + tabid + "_" + id).val() != undefined && $(".txtQACpt_" + tabid + "_" + id).val() !="") {
                                $("#hdnQAAcceptCptCodes" + tabid).val(id + "^" + $(".txtQACpt_" + tabid + "_" + id).val());
                            }
                        }
                        else {
                            if ($(".txtQACpt_" + tabid + "_" + id).val() != undefined && $(".txtQACpt_" + tabid + "_" + id).val() !="") {
                                $("#hdnQAAcceptCptCodes" + tabid).val($("#hdnQAAcceptCptCodes" + tabid).val() + "|" + id + "^" + $(".txtQACpt_" + tabid + "_" + id).val());
                            }
                        }
                    }
                    index = index + parseInt(1);
                }
            }
        });

        //Ending of reading Claim2 to Claim4 Data

        //Dx Remarks
        var Dxremarks = $("#claim1 [class*=DxRemarks_]");
        $("#hdnQADxRemarks").val("");
        for (var i = 0; i < Dxremarks.length; i++) {

            if ($(Dxremarks[i]).css("display") == "flex") {

                var id = parseInt($(Dxremarks[i]).attr("id").split("_")[1]);
                $("#validDx_" + id).hide();
                if ($(Dxremarks[i]).val() != "")
                {
                    if ($("#hdnQADxRemarks").val() == "")
                        $("#hdnQADxRemarks").val(id + "^" + $(Dxremarks[i]).val());
                    else
                        $("#hdnQADxRemarks").val($("#hdnQADxRemarks").val() + "|" + id + "^" + $(Dxremarks[i]).val());
                }
                else {
                    if ($(Dxremarks[i]).val() == "") {
                        var chk = $("#chkAll_1").is(':checked');
                        if (!chk) {
                            $(Dxremarks[i]).focus();
                            $("#validDx_" + id).show();
                        }
                    }
                }
            }
        }

        //Dx Codes
        var DxCodes = $("#claim1 [id*=txtDx_]");
        $("#hdnQADxCodes").val("");
        for (var i = 0; i < DxCodes.length; i++) {
            var id = parseInt($(DxCodes[i]).attr("id").split("_")[1]);
            if ($(".DxRemarks_" + id).css("display") == "flex") {
                if ($(".DxRemarks_" + id).val() != "") {
                    if ($(DxCodes[i]).val() != "") {
                        if ($("#hdnQADxCodes").val() == "")
                            $("#hdnQADxCodes").val(id + "^" + $(DxCodes[i]).val());
                        else
                            $("#hdnQADxCodes").val($("#hdnQADxCodes").val() + "|" + id + "^" + $(DxCodes[i]).val());
                    }
                    else {
                        var chk = $("#chkAll_1").is(':checked');
                        if (!chk) {
                            $(DxCodes[i]).focus();
                            $("#validDx_" + id).show();
                        }
                    }
                }
                else {
                    var chk = $("#chkAll_1").is(':checked');
                    if (!chk) {
                        $(".DxRemarks_" + id).focus();
                        $("#validDx_" + id).show();
                    }
                }
            }
            else {
                if ($("#hdnQAAcceptDxCodes").val() == "") {
                    if ($(".txtQADx_" + id).val() != undefined && $(".txtQADx_" + id).val() !="") {
                        $("#hdnQAAcceptDxCodes").val(id + "^" + $(".txtQADx_" + id).val());
                    }
                }
               else {
                    if ($(".txtQADx_" + id).val() != undefined && $(".txtQADx_" + id).val() !="") {
                       $("#hdnQAAcceptDxCodes").val($("#hdnQAAcceptDxCodes").val() + "|" + id + "^" + $(".txtQADx_" + id).val());
                   }
               }
            }
        }

        //CPT Remarks
        var CptRemarks = $("#claim1 [class*=CptRemarks_]");
        $("#hdnQACptRemarks").val("");
        for (var i = 0; i < CptRemarks.length; i++) {
            var id = parseInt($(CptRemarks[i]).attr("id").split("_")[1]);
            $("#validCpt_" + id).hide();
            if ($(CptRemarks[i]).css("display") == "flex") {
                if ($(CptRemarks[i]).val() != "") {
                    if ($("#hdnQACptRemarks").val() == "")
                        $("#hdnQACptRemarks").val(id + "^" + $(CptRemarks[i]).val());
                    else
                        $("#hdnQACptRemarks").val($("#hdnQACptRemarks").val() + "|" + id + "^" + $(CptRemarks[i]).val());
                }
                else {
                    if ($(CptRemarks[i]).val() == "") {
                        var chk = $("#chkAll_1").is(':checked');
                        if (!chk) {
                            $(CptRemarks[i]).focus();
                            $("#validCpt_" + id).show();
                        }
                    }
                }
            }
        }

        //CPT Codes
        var CptCodes = $("#claim1 [id*=DivCptRow_]");
        $("#hdnQACptCodes").val("");
        for (var i = 1; i <= CptCodes.length; i++) {
            var id = parseInt($("#txtCpt_" + i).attr("id").split("_")[1]);
            if ($(".CptRemarks_" + id).css("display") == "flex") {
                if ($(".CptRemarks_" + id).val() != "") {
                    if ($("#txtCpt_" + i).val() != "") {
                        if ($("#hdnQACptCodes").val() == "") {
                            var mod = $("#txtMod_" + i).val() != "" ? $("#txtMod_" + i).val() : null;
                            var qty = $("#txtQty_" + i).val() != "" ? $("#txtQty_" + i).val() : null;
                            var links = $("#txtLinks_" + i).val() != "" ? $("#txtLinks_" + i).val() : null;
                            $("#hdnQACptCodes").val(id + "^" + $("#txtCpt_" + i).val() + "^" + mod + "^" + qty + "^" + links);
                        }
                        else {
                            if ($("#txtCpt_" + i).val() != "") {
                                var mod = $("#txtMod_" + i).val() != "" ? $("#txtMod_" + i).val() : null;
                                var qty = $("#txtQty_" + i).val() != "" ? $("#txtQty_" + i).val() : null;
                                var links = $("#txtLinks_" + i).val() != "" ? $("#txtLinks_" + i).val() : null;
                                $("#hdnQACptCodes").val($("#hdnQACptCodes").val() + "|" + id + "^" + $("#txtCpt_" + i).val() + "^" + mod + "^" + qty + "^" + links);
                            }
                        }
                    }
                    else {
                        var chk = $("#chkAll_1").is(':checked');
                        if (!chk) {
                            $("#txtCpt_" + i).focus();
                            $("#validCpt_" + id).show();
                        }
                    }

                } else {
                    var chk = $("#chkAll_1").is(':checked');
                    if (!chk) {
                        $(".CptRemarks_" + id).focus();
                        $("#validCpt_" + id).show();
                    }
                }
            } else {
                if ($("#hdnQAAcceptCptCodes").val() == "") {
                    if ($(".txtQACpt_" + id).val() != undefined && $(".txtQACpt_" + id).val() !="" ) {
                        $("#hdnQAAcceptCptCodes").val(id + "^" + $(".txtQACpt_" + id).val());
                    }
                }
               else {
                    if ($(".txtQACpt_" + id).val() != undefined && $(".txtQACpt_" + id).val() !="") {
                       $("#hdnQAAcceptCptCodes").val($("#hdnQAAcceptCptCodes").val() + "|" + id + "^" + $(".txtQACpt_" + id).val());
                   }
               }
            }
        }

        var total = $(".fa-check-circle").length;
        var reject = $(".reject:not(.ignore)").length;
        var accept = $(".accept").length;

        $(".tab").each(function () {
            var id = $(this).attr('id');
            var tabid = id.split("tabIndex_")[1].split("_ClaimId_")[0];
            if (tabid == "1") {
                var chk = $("#chkAll_" + tabid).is(':checked');
                if (!chk) {
                    if ($("#ErrorType_" + tabid).val() == "") {
                        $("#ErrorTypeError_" + tabid).html('<span id="projectdd-error" class="">ErrorType is required.</span>');
                        var txtdanger = $('[class*=txtdanger][style=""]');
                        if (txtdanger.length > 0)
                            e.preventDefault();
                    }

                }
                else {
                    $("#hdnQAErrorTypeID" + tabid).val("0");
                }
            } else {
                var chk = $("#chkAll_" + tabid).is(':checked');
                if (!chk) {
                    if ($("#ErrorType_" + tabid).val() == "") {
                        $("#ErrorTypeError_" + tabid).html('<span id="projectdd-error" class="">ErrorType is required.</span>');
                        var txtdanger = $('[class*=txtdanger][style=""]');
                        if (txtdanger.length > 0)
                            e.preventDefault();
                    }
                }
                else {
                    $("#hdnQAErrorTypeID" + tabid).val("0");
                }
            }
        });

        $(".tab").each(function () {
            var id = $(this).attr('id');
            var tabid = id.split("tabIndex_")[1].split("_ClaimId_")[0];
            if (tabid == "1") {
                var Dx = $("#claim1 [id*=DxRemarks_]").last().attr('id');
                var id = Dx.split('_')[1];
                if ($("."+ Dx).val() == "" && $("#txtDx_" + id).val() == "") {
                    $("#validDx_" + id).hide();
                }
                var Cpt = $("#claim1 [id*=CptRemarks_]").last().attr('id');
                var id = Cpt.split('_')[1];
                if ($("." + Cpt).val() == "" && $("#txtCpt_" + id).val() == "") {
                    $("#validCpt_" + id).hide();
                }
            }
           else {
                var Dxtab = $("[id*=DxRemarkss_" + tabid + "_]").last().attr('id');
                var id = Dxtab.split('_')[2];
                if ($("#" + Dxtab).val() == "" && $("#txtDx" + tabid + "Claim_" + id).val() == "") {
                    $("#validDxRemarksClaim_" + tabid+"_" + id).hide();
                }
                var Cpttab = $("[id*=CptRemarkss_" + tabid + "_]").last().attr('id');
                var id = Cpttab.split('_')[2];
                if ($("#" + Cpttab).val() == "" && $("#txt" + tabid + "Cpt_" + id).val() == "") {
                    $("#validCptRemarksClaim_" + tabid + "_" + id).hide();
                }
            }
        });

        if (total != accept + reject) {
            $("#validationPopUp").show();
            e.preventDefault();
        } else {
            var txtdanger = $('[class*=txtdanger][style=""]');
            var errortype = $('[id*=projectdd]').text();
            if (txtdanger.length > 0 || errortype !="")
                e.preventDefault();
            else
                $("#form1").submit();
        }
    });

    validationPopUp = function () {
        $("#validationPopUp").hide();
    };

    var dxArray = [];
    function DxFunction(txt_0) {
        var id = parseInt(txt_0.split("_")[1]) + parseInt(1);
        if (txt_0.split("_")[1] !== undefined) {
            var currId = parseInt(id) - parseInt(1);
            var val = $("#txtDx_" + currId).val();
            if (val !== "" && val !== null) {
                if ($.inArray(val, dxArray) == -1) {
                    dxArray.push(val);
                    $("#Dx").val(dxArray);
                    var text = "'" + "txtDx_" + id + "'";
                    $("#DivDx").append('<div id="DivDxRow_' + id + '" class="form-group row"><label class= "col-md-3 lessWidth m-t-15" ></label><div class="col-md-3 input-group"></div><div class="col-md-3 input-group"><div class="input-group-prepend ControlHeight"><span class="input-group-text AdjustSerialNumber" id="basic-addon1">' + id + '</span></div><input type="text" placeholder="Code" tabindex="' + id + '" onfocusout="DxFunction(' + text + ')" class="form-control CoderDetails ControlHeight txtDx" id="txtDx_' + id + '" /></div><div class="col-md-3 input-group"><input type = "text" style="display: flex;" id ="DxRemarks_' + id + '" class="form-control ControlHeight DxRemarks_'+id+'" />  <span id="validDx_' + id + '" class="text-danger txtdanger DxRemarks_'+id+'" style="display: none;">*</span></div></div>');
                    $("#txtDx_" + currId).removeAttr("onfocusout", "");
                    $("#txtDx_" + id).focus();
                }
            } else {
                $("#txtCpt_1").focus();
            }
        }
    }

    var dxArray2 = [];
    var dxArray3 = [];
    var dxArray4 = [];
    function DxClaims(txt_0) {
        var id = parseInt(txt_0.split("_")[1]) + parseInt(1);
        var claimid = parseInt(txt_0.split("_")[2]);
        var seqno = parseInt($("#" + txt_0).val()) + parseInt(1);
        if (claimid == 2) {
            if (txt_0.split("_")[1] !== undefined) {
                var currId = parseInt(id) - parseInt(1);
                var val = $("#txtDx2Claim_" + currId).val();
                if (val !== "" && val !== null) {
                    if ($.inArray(val, dxArray2) == -1) {
                        dxArray2.push(val);
                        //$("#hdnDxCodes1").val(dxArray2);
                        var text = "'" + "txt" + claimid + "Dx_" + seqno + "_" + parseInt(2) + "'";
                        var deleteDx = "'" + "Div2DxRow_" + id + "_" + claimid + "'";
                        $("#DivDx_2").append('<div id="Div2DxRow_' + id + "_" + claimid + '" class="form-group row"><label class="col-md-3 lessWidth m-t-15"></label><div class="col-md-3 input-group" style="visibility: hidden;"><input type="hidden" id=' + text + ' value=' + seqno + ' /><div class="input-group-prepend ControlHeight"><span class="input-group-text AdjustSerialNumber" id="basic-addon1"></span></div><input class="form-control CoderDetails ControlHeight valid" type="text" value="" style="pointer-events: none; background-color: rgb(233, 236, 239);"><div class="input-group-append ControlHeight"><span class="input-group-text AcceptRejectWidth QACorrections"></span></div></div><div class="col-md-3 input-group"><div class="input-group-prepend ControlHeight"><span class="input-group-text dx2index AdjustSerialNumber" id="basic-addon1">' + seqno + '</span></div><input type="text" placeholder="Code" onfocusout="DxClaims(' + text + ')" class="form-control CoderDetails claim_' + claimid + '" id="txtDx2Claim_' + seqno + '" /></div><div class="col-md-3 input-group"><input type = "text" style="display: flex;" id ="DxRemarkss_2_' + seqno + '" class="form-control ControlHeight" /><span id="validDxRemarksClaim_2_' + seqno + '" class="text-danger txtdanger" style="display:none">*</span></div></div>');
                        $("#txtDx2Claim_" + currId).removeAttr("onfocusout", "");
                        $("#txtDx2Claim_1").removeAttr("onfocusout", "");
                        $("#txtDx2Claim_" + seqno).focus();
                    }
                }
                else {
                    $("#txt2Cpt_1").focus();
                }
            }
        }
        if (claimid == 3) {
            if (txt_0.split("_")[1] !== undefined) {
                var currId = parseInt(id) - parseInt(1);
                var val = $("#txtDx3Claim_" + currId).val();
                if (val !== "" && val !== null) {
                    if ($.inArray(val, dxArray3) == -1) {
                        dxArray3.push(val);
                        //$("#hdnDxCodes2").val(dxArray3);
                        var text = "'" + "txt" + claimid + "Dx_" + seqno + "_" + parseInt(3) + "'";
                        var deleteDx = "'" + "Div3DxRow_" + id + "_" + claimid + "'";
                        $("#DivDx_3").append('<div id="Div3DxRow_' + id + "_" + claimid + '" class="form-group row"><label class="col-md-3 lessWidth m-t-15"></label><div class="col-md-3 input-group" style="visibility: hidden;"><input type="hidden" id=' + text + ' value=' + seqno + ' /><div class="input-group-prepend ControlHeight"><span class="input-group-text AdjustSerialNumber" id="basic-addon1"></span></div><input class="form-control CoderDetails ControlHeight valid" type="text" value="" style="pointer-events: none; background-color: rgb(233, 236, 239);"><div class="input-group-append ControlHeight"><span class="input-group-text AcceptRejectWidth QACorrections"></span></div></div><div class="col-md-3 input-group"><div class="input-group-prepend ControlHeight"><span class="input-group-text dx3index AdjustSerialNumber" id="basic-addon1">' + seqno + '</span></div><input type="text" placeholder="Code" onfocusout="DxClaims(' + text + ')" class="form-control CoderDetails claim_' + claimid + '" id="txtDx3Claim_' + seqno + '" /></div><div class="col-md-3 input-group"><input type = "text" style="display: flex;" id ="DxRemarkss_3_' + seqno + '" class="form-control ControlHeight" /><span id="validDxRemarksClaim_3_' + seqno + '" class="text-danger txtdanger" style="display:none">*</span></div></div>');
                        $("#txtDx3Claim_" + currId).removeAttr("onfocusout", "");
                        $("#txtDx3Claim_1").removeAttr("onfocusout", "");
                        $("#txtDx3Claim_" + seqno).focus();
                    }
                } else {
                    $("#txt3Cpt_1").focus();
                }
            }
        }
        if (claimid == 4) {
            if (txt_0.split("_")[1] !== undefined) {
                var currId = parseInt(id) - parseInt(1);
                var val = $("#txtDx4Claim_" + currId).val();
                if (val !== "" && val !== null) {
                    if ($.inArray(val, dxArray4) == -1) {
                        dxArray4.push(val);
                        //$("#hdnDxCodes3").val(dxArray4);
                        var text = "'" + "txt" + claimid + "Dx_" + seqno + "_" + parseInt(4) + "'";
                        var deleteDx = "'" + "Div4DxRow_" + id + "_" + claimid + "'";
                        $("#DivDx_4").append('<div id="Div4DxRow_' + id + "_" + claimid + '" class="form-group row"><label class="col-md-3 lessWidth m-t-15"></label><div class="col-md-3 input-group" style="visibility: hidden;"><input type="hidden" id=' + text + ' value=' + seqno + ' /><div class="input-group-prepend ControlHeight"><span class="input-group-text AdjustSerialNumber" id="basic-addon1"></span></div><input class="form-control CoderDetails ControlHeight valid" type="text" value="" style="pointer-events: none; background-color: rgb(233, 236, 239);"><div class="input-group-append ControlHeight"><span class="input-group-text AcceptRejectWidth QACorrections"></span></div></div><div class="col-md-3 input-group"><div class="input-group-prepend ControlHeight"><span class="input-group-text dx4index AdjustSerialNumber" id="basic-addon1">' + seqno + '</span></div><input type="text" placeholder="Code" onfocusout="DxClaims(' + text + ')" class="form-control CoderDetails claim_' + claimid + '" id="txtDx4Claim_' + seqno + '" /></div><div class="col-md-3 input-group"><input type = "text" style="display: flex;" id ="DxRemarkss_4_' + seqno + '" class="form-control ControlHeight" /><span id="validDxRemarksClaim_4_' + seqno + '" class="text-danger txtdanger" style="display:none">*</span></div></div>');
                        $("#txtDx4Claim_" + currId).removeAttr("onfocusout", "");
                        $("#txtDx4Claim_1").removeAttr("onfocusout", "");
                        $("#txtDx4Claim_" + seqno).focus();
                    }
                } else {
                    $("#txt4Cpt_1").focus();
                }
            }
        }
    }

    var cptArray = [];
    function CptFunction(txtCpt_0) {
        var id = parseInt(txtCpt_0.split("_")[1]) + parseInt(1);
        if (txtCpt_0.split("_")[1] !== undefined) {
            var id1 = parseInt(id) - parseInt(1);
            var val1 = $("#txtCpt_" + id1).val();

            var val2 = null;
            if ($("#txtMod_" + id1).val() != "")
                val2 = $("#txtMod_" + id1).val().replace(",", "|");

            var val3 = null;
            if ($("#txtQty_" + id1).val() != "")
                val3 = $("#txtQty_" + id1).val();

            var val4 = null;
            if ($("#txtLinks_" + id1).val() != "")
                val4 = $("#txtLinks_" + id1).val().replace(",", "|");

            if (val1 !== "") {
                if ($.inArray(val1, cptArray) == -1) {
                    cptArray.push(val1 + "^" + val2 + "^" + val3 + "^" + val4);
                    $("#CPTCode").val(cptArray);
                    var count = id + parseInt(1);
                    var txtLinks = "'" + "txtLinks_" + id + "'";
                    var tabindex1 = parseInt(9) + parseInt(id) + parseInt(count) + parseInt(val1);
                    var tabindex2 = parseInt(10) + parseInt(id) + parseInt(count) + parseInt(val1);
                    var tabindex3 = parseInt(11) + parseInt(id) + parseInt(count) + parseInt(val1);
                    var tabindex4 = parseInt(12) + parseInt(id) + parseInt(count) + parseInt(val1);
                    $("#DivCpt").append('<div id="DivCptRow_' + id + '" class="form-group row"><label class="col-md-3 lessWidth m-t-15"></label><div class="col-md-3 CptlessWidth input-group"></div ><div class="col-md-3 CptlessWidth input-group"><div class="input-group-prepend ControlHeight"><span class="input-group-text AdjustSerialNumber" id="basic-addon1">' + id + '</span></div><input tabindex = "' + tabindex1 + '" type = "text" maxlength="5" style="min-width:50px;" placeholder = "Code" class= "form-control CoderDetails ControlHeight txtCpt" id = "txtCpt_' + id + '" /><input tabindex="' + tabindex2 + '" type="text" style="min-width:42px;" class="form-control CoderDetails ControlHeight" placeholder="Mod" id="txtMod_' + id + '"/><input tabindex="' + tabindex3 + '" type="text" style="max-width:23px;" class="form-control CoderDetails ControlHeight" placeholder="Qty" value="1" id="txtQty_' + id + '"/><input tabindex="' + tabindex4 + '" type="text" class="form-control CoderDetails ControlHeight" placeholder="Link All" onfocusout="CptFunction(' + txtLinks + ')" id="txtLinks_' + id + '"/></div><div class="col-md-3 input-group"><input type="text" style="display: flex;" id="CptRemarks_' + id + '" class="form-control ControlHeight CptRemarks_'+id+'" /><span id="validCpt_' + id +'" class="text-danger txtdanger" style="display:none">*</span></div></div>');
                    $("#txtLinks_" + id1).removeAttr("onfocusout", "");
                    $("#txtCpt_" + id).focus();
                }

            }
        }
    }

    var cptArray2 = [];
    var cptArray3 = [];
    var cptArray4 = [];
    function CptClaims(txtCpt_0) {
        var id = parseInt(txtCpt_0.split("_")[1]) + parseInt(1);
        var claimid = parseInt(txtCpt_0.split("_")[2]);
        var seqno = parseInt($("#" + txtCpt_0).val()) + parseInt(1);
        if (claimid == 2) {
            if (txtCpt_0.split("_")[1] !== undefined) {
                var currId = parseInt(id) - parseInt(1);
                var val = $("#txt2Cpt_" + currId).val();
                if (val !== "") {
                    if ($.inArray(val1, cptArray2) == -1) {
                        //if (val1 !== undefined) {
                            var txtLinks = "'" + "txt" + claimid + "links_" + seqno + "_" + parseInt(2) + "'";
                            var deleteCpt = "'" + "Div2CptRow_" + id + "_" + claimid + "'";
                            $("#DivCpt_2").append('<div id="Div2CptRow_' + id + "_" + claimid + '" class="form-group row"><label class="col-md-3 lessWidth m-t-15"></label><div class="col-md-3 CptlessWidth input-group" style="visibility: hidden;"><input type="hidden" id=' + txtLinks + ' value=' + seqno + ' /><div class="input-group-prepend ControlHeight"><span class="input-group-text AdjustSerialNumber" id="basic-addon1"></span></div><input type="text" maxlength="5" style="min-width: 50px; pointer-events: none; background-color: rgb(233, 236, 239);" class="form-control CoderDetails ControlHeight" autocomplete="off" placeholder="Code" value=""><input type="text" style="min-width: 42px; pointer-events: none; background-color: rgb(233, 236, 239);" class="form-control CoderDetails ControlHeight" autocomplete="off" placeholder="Mod" value=""><input type="text" style="max-width: 23px; pointer-events: none; background-color: rgb(233, 236, 239);" class="form-control CoderDetails ControlHeight" autocomplete="off" placeholder="Qty" value=""><input type="text" class="form-control CoderDetails ControlHeight" autocomplete="off" placeholder="Link All" value="" style="pointer-events: none; background-color: rgb(233, 236, 239);"><div class="input-group-append ControlHeight"><span class="input-group-text AcceptRejectWidth"></span></div></div><div class="col-md-3 CptlessWidth input-group"><div class="input-group-prepend ControlHeight"><span class="input-group-text cpt2index AdjustSerialNumber" id="basic-addon1">' + seqno + '</span></div><input type = "text" placeholder = "Code" style="min-width:50px;" maxlength="5" class= "form-control CoderDetails Cptclaim_' + claimid + '" id = "txt2Cpt_' + seqno + '" /><input type="text" style="min-width:42px;" class="form-control CoderDetails Cptclaim_' + claimid + '" placeholder="Mod" id="txt2mod_' + seqno + '"/><input type="text" style="max-width:23px;" class="form-control CoderDetails Cptclaim_' + claimid + '" placeholder="1" value="1" id="txt2qty_' + seqno + '"/><input type="text" class="form-control CoderDetails Cptclaim_' + claimid + '" placeholder="Link All" onfocusout="CptClaims(' + txtLinks + ')" id="txt2links_' + seqno + '"/></div><div class="col-md-3 input-group"><input type="text" style="display: flex;" id="CptRemarkss_2_' + seqno + '" class="form-control ControlHeight" /><span id="validCptRemarksClaim_2_'+seqno+'" class="text-danger txtdanger" style="display:none">*</span></div></div>');
                            $("#txt2links_" + currId).removeAttr("onfocusout", "");
                            $("#txt2links_1").removeAttr("onfocusout", "");
                            $("#txt2Cpt_" + seqno).focus();
                        //}
                    }
                }
                else {
                    $("#ProviderFeedbacks_" + id).focus();
                }
            }
        }

        if (claimid == 3) {
            if (txtCpt_0.split("_")[1] !== undefined) {
                var id1 = parseInt(id) - parseInt(1);
                var val1 = $("#txt3Cpt_" + id1).val();
                if (val1 !== "") {
                    if ($.inArray(val1, cptArray3) == -1) {
                        //if (val1 !== undefined) {
                            var txtLinks = "'" + "txt" + claimid + "links_" + seqno + "_" + parseInt(3) + "'";
                            var deleteCpt = "'" + "Div3CptRow_" + id + "_" + claimid + "'";
                        $("#DivCpt_3").append('<div id="Div3CptRow_' + id + "_" + claimid + '" class="form-group row"><label class="col-md-3 lessWidth m-t-15"></label><div class="col-md-3 CptlessWidth input-group" style="visibility: hidden;"><input type="hidden" id=' + txtLinks + ' value=' + seqno + ' /><div class="input-group-prepend ControlHeight"><span class="input-group-text AdjustSerialNumber" id="basic-addon1"></span></div><input type="text" maxlength="5" style="min-width: 50px; pointer-events: none; background-color: rgb(233, 236, 239);" class="form-control CoderDetails ControlHeight" autocomplete="off" placeholder="Code" value=""><input type="text" style="min-width: 42px; pointer-events: none; background-color: rgb(233, 236, 239);" class="form-control CoderDetails ControlHeight" autocomplete="off" placeholder="Mod" value=""><input type="text" style="max-width: 23px; pointer-events: none; background-color: rgb(233, 236, 239);" class="form-control CoderDetails ControlHeight" autocomplete="off" placeholder="Qty" value=""><input type="text" class="form-control CoderDetails ControlHeight" autocomplete="off" placeholder="Link All" value="" style="pointer-events: none; background-color: rgb(233, 236, 239);"><div class="input-group-append ControlHeight"><span class="input-group-text AcceptRejectWidth"></span></div></div><div class="col-md-3 CptlessWidth input-group"><div class="input-group-prepend ControlHeight"><span class="input-group-text cpt2index AdjustSerialNumber" id="basic-addon1">' + seqno + '</span></div><input type = "text" placeholder = "Code" style="min-width:50px;" maxlength="5" class= "form-control CoderDetails Cptclaim_' + claimid + '" id = "txt3Cpt_' + id + '" /><input type="text" style="min-width:42px;" class="form-control CoderDetails Cptclaim_' + claimid + '" placeholder="Mod" id="txt3mod_' + id + '"/><input type="text" style="max-width:23px;" class="form-control CoderDetails Cptclaim_' + claimid + '" placeholder="Qty" value="1" id="txt3qty_' + id + '"/><input type="text" class="form-control CoderDetails Cptclaim_' + claimid + '" placeholder="Link All" onfocusout="CptClaims(' + txtLinks + ')" id="txt3links_' + id + '"/></div><div class="col-md-3 input-group"><input type="text" style="display: flex;" id="CptRemarkss_3_' + seqno + '" class="form-control ControlHeight" /><span id="validCptRemarksClaim_3_' + seqno + '" class="text-danger txtdanger" style="display:none">*</span></div></div>');
                            $("#txt3links_" + id1).removeAttr("onfocusout", "");
                            $("#txt3links_1").removeAttr("onfocusout", "");
                            $("#txt3Cpt_" + seqno).focus();
                        //}
                    }
                }
                else {
                    $("#ProviderFeedbacks_" + id).focus();
                }
            }
        }

        if (claimid == 4) {
            if (txtCpt_0.split("_")[1] !== undefined) {
                var id1 = parseInt(id) - parseInt(1);
                var val1 = $("#txt4Cpt_" + id1).val();
                if (val1 !== "") {
                    if ($.inArray(val1, cptArray4) == -1) {
                        //if (val1 !== undefined) {
                            var txtLinks = "'" + "txt" + claimid + "links_" + seqno + "_" + parseInt(4) + "'";
                            var deleteCpt = "'" + "Div4CptRow_" + id + "_" + claimid + "'";
                        $("#DivCpt_4").append('<div id="Div4CptRow_' + id + "_" + claimid + '" class="form-group row"><label class="col-md-3 lessWidth m-t-15"></label><div class="col-md-3 CptlessWidth input-group" style="visibility: hidden;"><input type="hidden" id=' + txtLinks + ' value=' + seqno + ' /><div class="input-group-prepend ControlHeight"><span class="input-group-text AdjustSerialNumber" id="basic-addon1"></span></div><input type="text" maxlength="5" style="min-width: 50px; pointer-events: none; background-color: rgb(233, 236, 239);" class="form-control CoderDetails ControlHeight" autocomplete="off" placeholder="Code" value=""><input type="text" style="min-width: 42px; pointer-events: none; background-color: rgb(233, 236, 239);" class="form-control CoderDetails ControlHeight" autocomplete="off" placeholder="Mod" value=""><input type="text" style="max-width: 23px; pointer-events: none; background-color: rgb(233, 236, 239);" class="form-control CoderDetails ControlHeight" autocomplete="off" placeholder="Qty" value=""><input type="text" class="form-control CoderDetails ControlHeight" autocomplete="off" placeholder="Link All" value="" style="pointer-events: none; background-color: rgb(233, 236, 239);"><div class="input-group-append ControlHeight"><span class="input-group-text AcceptRejectWidth"></span></div></div><div class="col-md-3 CptlessWidth input-group"><div class="input-group-prepend ControlHeight"><span class="input-group-text cpt2index AdjustSerialNumber" id="basic-addon1">' + seqno + '</span></div><input type = "text" placeholder = "Code" style="min-width:50px;" maxlength="5" class= "form-control CoderDetails Cptclaim_' + claimid + '" id = "txt4Cpt_' + id + '" /><input type="text" style="min-width:42px;" class="form-control CoderDetails Cptclaim_' + claimid + '" placeholder="Mod" id="txt4mod_' + id + '"/><input type="text" style="max-width:23px;" class="form-control CoderDetails Cptclaim_' + claimid + '" placeholder="Qty" value="1" id="txt4qty_' + id + '"/><input type="text" class="form-control CoderDetails Cptclaim_' + claimid + '" placeholder="Link All" onfocusout="CptClaims(' + txtLinks + ')" id="txt4links_' + id + '"/></div><div class="col-md-3 input-group"><input type="text" style="display: flex;" id="CptRemarkss_4_' + seqno + '" class="form-control ControlHeight" /><span id="validCptRemarksClaim_4_' + seqno + '" class="text-danger txtdanger" style="display:none">*</span></div></div>');
                            $("#txt4links_" + id1).removeAttr("onfocusout", "");
                            $("#txt4links_1").removeAttr("onfocusout", "");
                            $("#txt4Cpt_" + seqno).focus();
                        //}
                    }
                }
                else {
                    $("#ProviderFeedbacks_" + id).focus();
                }
            }
        }
    }

    removevalid = function (id) {
        var id1 = id.split("_")[0];
        var id2 = id.split("_")[1];
        if ($("#" + id1 +"Remarks_" + id2).val() != "") {
            $("#valid" + id1 +"_" + id2).hide();
        } else {
            $("#valid" + id1 +"_" + id2).show();
        }
    };

    removeClaimValid = function (id) {
        var id1 = id.split("_")[0];
        var id2 = id.split("_")[2];
        if ($("#" + id).val() != "") {
            $("#valid" + id1 + "Claim_" + id2).hide();
        } else {
            $("#valid" + id1 + "Claim_" + id2).show();
        }
    };

</script>
