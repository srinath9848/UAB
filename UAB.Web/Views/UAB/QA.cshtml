@model List<UAB.DTO.ChartSummaryDTO>
@{
    ViewData["Title"] = "QA";
}
<form asp-action="SubmitQAAvailableChart" id="form1" asp-controller="UAB" method="POST">
    <div class="container-fluid">
        <div class="row">
            <partial name="_InitialData" model=Model.FirstOrDefault() />
            <partial name="_RebuttalChartDetails" model=Model />
        </div>
    </div>
</form>
<script src="~/dashboardassets/libs/jquery/dist/jquery.min.js"></script>
<script src="~/dashboardassets/libs/jquery-validation/dist/jquery.validate.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.11/jquery.validate.unobtrusive.min.js" type="text/javascript"></script>
<script type="text/javascript">

    $(".CoderDetails").css("pointer-events", "none");
    $(".CoderDetails").css("background-color", "#e9ecef");
    $('.CoderDetails').attr('disabled', true);
    $(".QADetails").attr("readonly", false);
    $("#qa").addClass('selected');
    $(".accept").removeClass('accept');

    var isBlocked = @(ViewBag.IsBlocked == null ? "0": "1");

    if (isBlocked == 1) {
        $("#btnBlock").hide();
        $("#btnBlockHistory").show();
        $("#btnPrevious").show();
        $("#btnNext").show();
    }

    CheckAllboxes = function (chkAll) {
        var chk = $("#" + chkAll).is(':checked');
        var id = chkAll.split("_")[1];
        if (chk) {
            $(".txtdanger").hide();
            if (id == "1") {
                $('.QARevised').css("display", "none");
                $(".QARevised").val('');
                $(".QADxRevised_" + id).css("display", "none");
                $(".QACptRevised_" + id).css("display", "none");
            } else {
                $(".QARevised_" + id).css("display", "none");
            }

            $("[class*=AdjustReject_" + id + "]").removeClass('reject');
            $("[class*=AdjustAcceptReject_" + id +"]").addClass('accept');

            $(".CodingDetails").hide();
            $(".errMsg").text('');
            $("#ErrorType_" + id).css("pointer-events", "none");
            $("#ErrorTypeError_" + id).text('');
            $(".QACorrectionsComments").hide();
        }
        else {
            $("[class*=AdjustAcceptReject_" + id +"]").removeClass('accept');
            $("#ErrorType_" + id).css("pointer-events", "auto");
        }
    }

    $('span i').click(function () {
        var id = $(this).attr('id');
        var tabIndex = $(this).attr('data');
        var iconid = id.split("_")[1];
        if (tabIndex =="1") {
            if ($(this).hasClass('fa-check-circle')) {
                $(this).toggleClass('accept');
                $(this).siblings().removeClass('reject');
                $("." + id).css("display", "none");
                $("#" + id + "1").css("display", "none");
                $("#" + id + "2").css("display", "none");
                $("#" + id + "1").val('');
                $("." + id).val('');
                $("#" + id + "2").val('');
                var total = $(".AcceptRejectWidth_1").find(".fa-check-circle").length;
                var accept = $(".AcceptRejectWidth_1").find(".accept").length;
                if (total == accept) {
                    var idclass = $(".newlyDxCpt_" + tabIndex).css("display") == "flex";
                    if (idclass == false) {
                        $("#chkAll_1").prop('checked', true);
                        $("#ErrorTypeError_1").val('');
                        $("#ErrorType_1").css("pointer-events", "none");
                        $(".ErrorType").text('');
                        $(".errMsg").text('');
                        $(".QACorrectionsComments").hide();
                    }
                }
            }
            else if ($(this).hasClass('fa-times-circle')) {
                $(this).toggleClass('reject');
                $(this).siblings().removeClass('accept');
                var idclass= $("#" + id).attr('class');
                if (idclass == "fa fa-times-circle fa-lg ignore") {
                    $("." + id).css("display", "none");
                    var total = $(".AcceptRejectWidth_1").find(".fa-check-circle").length;
                    var accept = $(".AcceptRejectWidth_1").find(".accept").length;
                    if (total == accept) {
                        $("#chkAll_1").prop('checked', true);
                        $("#ErrorTypeError_1").val('');
                        $("#ErrorType_1").css("pointer-events", "none");
                        $(".ErrorType").text('');
                        $(".errMsg").text('');
                        $(".QACorrectionsComments").hide();
                    }
                }
                else {

                    $("." + id).css("display", "flex");
                    $("#" + id + "1").css("display", "flex");
                    $("#" + id + "2").css("display", "flex");
                    $("#chkAll_1").prop('checked', false);
                    $("#ErrorType_1").css("pointer-events", "auto");
                    $(".QACorrectionsComments").show();
                }
            }
        } else {
            if ($(this).hasClass('fa-check-circle')) {
                $(this).toggleClass('accept');
                $(this).siblings().removeClass('reject');
                $("." + id).css("display", "none");
                $("#" + id + "1").css("display", "none");
                $("#" + id + "2").css("display", "none");
                $("#" + id + "1").val('');
                $("." + id).val('');
                $("#" + id + "2").val('');
                var total = $(".AcceptRejectWidth_" + iconid).find(".fa-check-circle").length;
                var accept = $(".AcceptRejectWidth_" + iconid).find(".accept").length;
                if (total == accept) {
                    var idclass = $(".newlyDxCpt_" + tabIndex).css("display") == "flex";
                    if (idclass == false) {
                        $("#chkAll_" + iconid).prop('checked', true);
                        $("#ErrorTypeError_" + iconid).val('');
                        $("#ErrorType_" + iconid).css("pointer-events", "none");
                        $(".ErrorType_" + iconid).text('');
                        $(".errMsg").text('');
                        $(".QACorrectionsComments_" + iconid).hide();
                    }
                }
            }
            else if ($(this).hasClass('fa-times-circle')) {
                $(this).toggleClass('reject');
                $(this).siblings().removeClass('accept');
                var idclass = $("#" + id).attr('class');
                if (idclass == "fa fa-times-circle fa-lg ignore") {
                    $("." + id).css("display", "none");
                    var total = $(".AcceptRejectWidth_" + iconid).find(".fa-check-circle").length;
                    var accept = $(".AcceptRejectWidth_" + iconid).find(".accept").length;
                    if (total == accept) {
                        $("#chkAll_" + iconid).prop('checked', true);
                        $("#ErrorTypeError_" + iconid).val('');
                        $("#ErrorType_" + iconid).css("pointer-events", "none");
                        $(".ErrorType_" + iconid).text('');
                        $(".errMsg").text('');
                        $(".QACorrectionsComments_" + iconid).hide();
                    }
                }
                else {
                    $("." + id).css("display", "flex");
                    $("#" + id + "1").css("display", "flex");
                    $("#" + id + "2").css("display", "flex");
                    $("#chkAll_" + iconid).prop('checked', false);
                    $("#ErrorType_" + iconid).css("pointer-events", "auto");
                    $(".QACorrectionsComments_" + iconid).show();
                }
            }
        }
    });

    ErrorType = function (id) {
        if ($("#ErrorType_" + id).val() != "") {
            $("#ErrorTypeError_"+id).text('');
        }
    }

    $('#btnsubmit,#SubmitAndGetNext').click(function (e) {
        $('.CoderDetails').removeAttr('disabled')
        var currentdate = new Date();
        //Format: DD/MM/YYYY
        var datetime = currentdate.getDate() + "/"
            + (currentdate.getMonth() + 1) + "/"
            + currentdate.getFullYear();

        $("#hdnCurrDate").val(datetime);

        //Starting of reading Claim2 to Claim4 Data
        $(".tab").each(function () {
            var id = $(this).attr('id');
            if (id != "1") {
                var tabid = id.split("tabIndex_")[1].split("_ClaimId_")[0];
                var claimId = id.split("tabIndex_")[1].split("_ClaimId_")[1];
                $("#hdnClaimId" + tabid).val(claimId);
                var ProviderID = "";
                var PayorID = "";
                var ProviderFeedbackID = "";
                var ProviderRemarks = "";
                var payorRemarks = "";
                var FeedbackRemarks = "";
                $("#hdnClaim" + tabid).val('');
                if ($("#ProviderID_" + tabid + ".reject").length > 0) {
                    ProviderID = $("#ProviderID_" + tabid+"1").val();
                    ProviderRemarks = $("#ProviderID_" + tabid + "2").val();
                    if ($("#hdnClaim" + tabid).val() == "") {
                        $("#hdnClaim" + tabid).val("ClaimId" + "," + claimId + "^" + "ProviderID" + "," + ProviderID + "," + ProviderRemarks);
                    }
                }

                if ($("#PayorID_" + tabid + ".reject").length > 0) {
                    PayorID = $("#PayorID_" + tabid+"1").val();
                    payorRemarks = $('#PayorID_' + tabid+"2").val();
                    if ($("#hdnClaim" + tabid).val() == "") {
                        $("#hdnClaim" + tabid).val("ClaimId" + "," + claimId + "^" + "PayorID" + "," + PayorID + "," + payorRemarks);
                    } else {
                        $("#hdnClaim" + tabid).val($("#hdnClaim" + tabid).val() + "^" + "PayorID" + "," + PayorID + "," + payorRemarks);
                    }
                }

                if ($("#Feedback_" + tabid + ".reject").length > 0) {
                    ProviderFeedbackID = $("#Feedback_" + tabid+"1").val();
                    FeedbackRemarks = $('#Feedback_' + tabid+"2").val();
                    if ($("#hdnClaim" + tabid).val() == "") {
                        $("#hdnClaim" + tabid).val("ClaimId" + "," + claimId + "^" + "ProviderFeedbackID" + "," + ProviderFeedbackID + "," + FeedbackRemarks);
                    } else {
                        $("#hdnClaim" + tabid).val($("#hdnClaim" + tabid).val() + "^" + "ProviderFeedbackID" + "," + ProviderFeedbackID + "," + FeedbackRemarks);
                    }
                }

                var DxClaimremarks = $("[class*=DxRemarks_" + tabid+"_]");
                $("#hdnQADxRemarks" + tabid).val("");
                for (var i = 0; i < DxClaimremarks.length; i++) {

                    if ($(DxClaimremarks[i]).css("display") == "flex") {

                        var id = parseInt($(DxClaimremarks[i]).attr("id").split("_")[2]);
                        $("#validDxRemarksClaim_" + id).hide();
                        if ($(DxClaimremarks[i]).val() != "") {
                            if ($("#hdnQADxRemarks" + tabid).val() == "")
                                $("#hdnQADxRemarks" + tabid).val(id + "^" + $(DxClaimremarks[i]).val());
                            else
                                $("#hdnQADxRemarks" + tabid).val($("#hdnQADxRemarks" + tabid).val() + "|" + id + "^" + $(DxClaimremarks[i]).val());

                        }
                        else {
                            if ($(DxClaimremarks[i]).val() == "") {
                                $(DxClaimremarks[i]).focus();
                                $("#validDxRemarksClaim_" + id).show();
                            }
                        }
                    }
                }

                var DxClaimcodes = $("[id*=txtDx_" + tabid + "_]");
                $("#hdnQADxCodes" + tabid).val("");
                for (var i = 0; i < DxClaimcodes.length; i++) {

                    var id = parseInt($(DxClaimcodes[i]).attr("id").split("_")[2]);

                    if ($(".DxRemarks_" + tabid+"_" + id).length) {

                        if ($("#" + $(DxClaimcodes[i]).attr("id")).val() != "" &&
                            $(".DxClaim_" + tabid+"_" + id).css("display") == "flex") {

                            if ($("#hdnQADxCodes" + tabid).val() == "")
                                $("#hdnQADxCodes" + tabid).val(id + "^" + $(DxClaimcodes[i]).val());
                            else
                                $("#hdnQADxCodes" + tabid).val($("#hdnQADxCodes" + tabid).val() + "|" + id + "^" + $(DxClaimcodes[i]).val());
                        }
                    }
                    else {
                        if ($("#" + $(DxClaimcodes[i]).attr("id")).val() != "") {

                            if ($("#hdnQADxCodes" + tabid).val() == "")
                                $("#hdnQADxCodes" + tabid).val(id + "^" + $(DxClaimcodes[i]).val());
                            else
                                $("#hdnQADxCodes" + tabid).val($("#hdnQADxCodes" + tabid).val() + "|" + id + "^" + $(DxClaimcodes[i]).val());
                        }
                    }
                }

                var CptClaimRemarks = $("[class*=CptRemarks_" + tabid+"_]");
                $("#hdnQACptRemarks" + tabid).val("");
                for (var i = 0; i < CptClaimRemarks.length; i++) {

                    var id = parseInt($(CptClaimRemarks[i]).attr("id").split("_")[2]);
                    $("#validCptRemarksClaim_" + id).hide();
                    if ($(CptClaimRemarks[i]).css("display") == "flex") {
                        if ($(CptClaimRemarks[i]).val() != "") {
                            if ($("#hdnQACptRemarks" + tabid).val() == "")
                                $("#hdnQACptRemarks" + tabid).val(id + "^" + $(CptClaimRemarks[i]).val());
                            else
                                $("#hdnQACptRemarks" + tabid).val($("#hdnQACptRemarks" + tabid).val() + "|" + id + "^" + $(CptClaimRemarks[i]).val());
                        }
                        else {
                            if ($(CptClaimRemarks[i]).val() == "") {
                                $(CptClaimRemarks[i]).focus();
                                $("#validCptRemarksClaim_" + id).show();
                            }
                        }
                    }
                }

                var CptClaimCodes = $("[id*=DivCptRow_" + tabid +"_]");
                $("#hdnQACptCodes" + tabid ).val("");
                for (var i = 1; i <= CptClaimCodes.length; i++) {
                    var id = parseInt($("#txtCpt_" + tabid +"_" + i).attr("id").split("_")[2]);
                    if ($(".CptRemarks_" + tabid +"_" + id).length) {
                        if ($("#txtCpt_" + tabid +"_" + i).val() != "" && $(".Cpt_" + tabid +"_" + id).css("display") == "flex") {
                            if ($("#hdnQACptCodes" + tabid).val() == "") {
                                if ($("#txtCpt_" + tabid +"_" + i).val() != "") {
                                    var mod = $("#txtMod_" + tabid +"_" + i).val() != "" ? $("#txtMod_" + tabid +"_" + i).val() : null;
                                    var qty = $("#txtQty_" + tabid +"_" + i).val() != "" ? $("#txtQty_" + tabid +"_" + i).val() : null;
                                    var links = $("#txtLinks_" + tabid +"_" + i).val() != "" ? $("#txtLinks_" + tabid +"_" + i).val() : null;
                                    $("#hdnQACptCodes" + tabid).val(id + "^" + $("#txtCpt_" + tabid +"_" + i).val() + "^" + mod + "^" + qty + "^" + links);
                                }
                            }
                            else {
                                if ($("#txtCpt_" + tabid +"_" + i).val() != "") {
                                    var mod = $("#txtMod_" + tabid +"_" + i).val() != "" ? $("#txtMod_" + tabid +"_" + i).val() : null;
                                    var qty = $("#txtQty_" + tabid +"_" + i).val() != "" ? $("#txtQty_" + tabid +"_" + i).val() : null;
                                    var links = $("#txtLinks_" + tabid +"_" + i).val() != "" ? $("#txtLinks_" + tabid +"_" + i).val() : null;
                                    $("#hdnQACptCodes" + tabid).val($("#hdnQACptCodes" + tabid).val() + "|" + id + "^" + $("#txtCpt_" + tabid +"_" + i).val() + "^" + mod + "^" + qty + "^" + links);
                                }
                            }
                        }
                    }
                    else {
                        if ($("#txtCpt_" + tabid +"_" + i).val() != "") {
                            if ($("#hdnQACptCodes").val() == "") {
                                var mod = $("#txtMod_" + tabid +"_" + i).val() != "" ? $("#txtMod_" + tabid +"_" + i).val() : null;
                                var qty = $("#txtQty_" + tabid +"_" + i).val() != "" ? $("#txtQty_" + tabid +"_" + i).val() : null;
                                var links = $("#txtLinks_" + i).val() != "" ? $("#txtLinks_" + i).val() : null;
                                $("#hdnQACptCodes" + tabid).val(id + "^" + $("#txtCpt_" + tabid +"_" + i).val() + "^" + mod + "^" + qty + "^" + links);
                            }
                            else {
                                var mod = $("#txtMod_" + tabid +"_" + i).val() != "" ? $("#txtMod_" + tabid +"_" + i).val() : null;
                                var qty = $("#txtQty_" + tabid +"_" + i).val() != "" ? $("#txtQty_" + tabid +"_" + i).val() : null;
                                var links = $("#txtLinks_" + tabid +"_" + i).val() != "" ? $("#txtLinks_" + tabid +"_" + i).val() : null;
                                $("#hdnQACptCodes" + tabid).val($("#hdnQACptCodes" + tabid).val() + "|" + id + "^" + $("#txtCpt_" + tabid +"_" + i).val() + "^" + mod + "^" + qty + "^" + links);
                            }
                        }
                    }
                }

            }
        });

        //Ending of reading Claim2 to Claim4 Data

        //Dx Remarks
        var Dxremarks = $("#cliam1 [class*=DxRemarks_]");
        $("#hdnQADxRemarks").val("");
        for (var i = 0; i < Dxremarks.length; i++) {

            if ($(Dxremarks[i]).css("display") == "flex") {

                var id = parseInt($(Dxremarks[i]).attr("id").split("_")[1]);
                $("#validDx_" + id).hide();
                if ($(Dxremarks[i]).val() != "")
                {
                    if ($("#hdnQADxRemarks").val() == "")
                        $("#hdnQADxRemarks").val(id + "^" + $(Dxremarks[i]).val());
                    else
                        $("#hdnQADxRemarks").val($("#hdnQADxRemarks").val() + "|" + id + "^" + $(Dxremarks[i]).val());
                }
                else {
                    if ($(Dxremarks[i]).val() == "") {
                        $(Dxremarks[i]).focus();
                        $("#validDx_" + id).show();
                    }
                }
            }
        }

        //Dx Codes
        var DxCodes = $("#cliam1 [id*=txtDx_]");
        $("#hdnQADxCodes").val("");
        for (var i = 0; i < DxCodes.length; i++) {

            var id = parseInt($(DxCodes[i]).attr("id").split("_")[1]);

            if ($(".DxRemarks_" + id).length) {

                if ($("#" + $(DxCodes[i]).attr("id")).val() != "" &&
                    $(".Dx_" + id).css("display") == "flex") {

                    if ($("#hdnQADxCodes").val() == "")
                        $("#hdnQADxCodes").val(id + "^" + $(DxCodes[i]).val());
                    else
                        $("#hdnQADxCodes").val($("#hdnQADxCodes").val() + "|" + id + "^" + $(DxCodes[i]).val());
                }
            }
            else {
                if ($("#" + $(DxCodes[i]).attr("id")).val() != "") {

                    if ($("#hdnQADxCodes").val() == "")
                        $("#hdnQADxCodes").val(id + "^" + $(DxCodes[i]).val());
                    else
                        $("#hdnQADxCodes").val($("#hdnQADxCodes").val() + "|" + id + "^" + $(DxCodes[i]).val());
                }
            }
        }

        //CPT Remarks
        var CptRemarks = $("#cliam1 [class*=CptRemarks_]");
        $("#hdnQACptRemarks").val("");
        for (var i = 0; i < CptRemarks.length; i++) {

            var id = parseInt($(CptRemarks[i]).attr("id").split("_")[1]);
            $("#validCpt_" + id).hide();
            if ($(CptRemarks[i]).css("display") == "flex") {
                if ($(CptRemarks[i]).val() != "") {
                    if ($("#hdnQACptRemarks").val() == "")
                        $("#hdnQACptRemarks").val(id + "^" + $(CptRemarks[i]).val());
                    else
                        $("#hdnQACptRemarks").val($("#hdnQACptRemarks").val() + "|" + id + "^" + $(CptRemarks[i]).val());
                }
                else {
                    if ($(CptRemarks[i]).val() == "") {
                        $(CptRemarks[i]).focus();
                        $("#validCpt_" + id).show();
                    }
                }
            }
        }

        //CPT Codes
        var CptCodes = $("#cliam1 [id*=DivCptRow_]");
        $("#hdnQACptCodes").val("");
        for (var i = 1; i <= CptCodes.length; i++) {
            var id = parseInt($("#txtCpt_" + i).attr("id").split("_")[1]);
            if ($(".CptRemarks_" + id).length) {
                if ($("#txtCpt_" + i).val() != "" && $(".Cpt_" + id).css("display") == "flex") {
                    if ($("#hdnQACptCodes").val() == "") {
                        if ($("#txtCpt_" + i).val() != "") {
                            var mod = $("#txtMod_" + i).val() != "" ? $("#txtMod_" + i).val() : null;
                            var qty = $("#txtQty_" + i).val() != "" ? $("#txtQty_" + i).val() : null;
                            var links = $("#txtLinks_" + i).val() != "" ? $("#txtLinks_" + i).val() : null;
                            $("#hdnQACptCodes").val(id + "^" + $("#txtCpt_" + i).val() + "^" + mod + "^" + qty + "^" + links);
                        }
                    }
                    else {
                        if ($("#txtCpt_" + i).val() != "") {
                            var mod = $("#txtMod_" + i).val() != "" ? $("#txtMod_" + i).val() : null;
                            var qty = $("#txtQty_" + i).val() != "" ? $("#txtQty_" + i).val() : null;
                            var links = $("#txtLinks_" + i).val() != "" ? $("#txtLinks_" + i).val() : null;
                            $("#hdnQACptCodes").val($("#hdnQACptCodes").val() + "|" + id + "^" + $("#txtCpt_" + i).val() + "^" + mod + "^" + qty + "^" + links);
                        }
                    }
                }
            }
            else {
                if ($("#txtCpt_" + i).val() != "") {
                    if ($("#hdnQACptCodes").val() == "") {
                        var mod = $("#txtMod_" + i).val() != "" ? $("#txtMod_" + i).val() : null;
                        var qty = $("#txtQty_" + i).val() != "" ? $("#txtQty_" + i).val() : null;
                        var links = $("#txtLinks_" + i).val() != "" ? $("#txtLinks_" + i).val() : null;
                        $("#hdnQACptCodes").val(id + "^" + $("#txtCpt_" + i).val() + "^" + mod + "^" + qty + "^" + links);
                    }
                    else {
                            var mod = $("#txtMod_" + i).val() != "" ? $("#txtMod_" + i).val() : null;
                            var qty = $("#txtQty_" + i).val() != "" ? $("#txtQty_" + i).val() : null;
                            var links = $("#txtLinks_" + i).val() != "" ? $("#txtLinks_" + i).val() : null;
                            $("#hdnQACptCodes").val($("#hdnQACptCodes").val() + "|" + id + "^" + $("#txtCpt_" + i).val() + "^" + mod + "^" + qty + "^" + links);
                    }
                }
            }
        }

        var total = $(".fa-check-circle").length;
        var reject = $(".reject:not(.ignore)").length;
        var accept = $(".accept").length;

        if (total != accept) {
            $(".tab").each(function () {
                var id = $(this).attr('id');
                if (id == "1") {
                    var chk = $("#chkAll_" + id).is(':checked');
                    if (!chk) {
                        if ($("#ErrorType_" + id).val() == "") {
                            $("#ErrorTypeError_" + id).html('<span id="projectdd-error" class="">ErrorType is required.</span>');
                            e.preventDefault();
                        }
                    }
                } else {
                    var tabid = id.split("tabIndex_")[1].split("_ClaimId_")[0];
                    var chk = $("#chkAll_" + tabid).is(':checked');
                    if (!chk) {
                        if ($("#ErrorType_" + tabid).val() == "") {
                            $("#ErrorTypeError_" + tabid).html('<span id="projectdd-error" class="">ErrorType is required.</span>');
                            e.preventDefault();
                        }
                    }
                }
            });
        }
        if (total != accept + reject) {
            $("#validationPopUp").show();
            e.preventDefault();
        }

    });

    validationPopUp = function () {
        $("#validationPopUp").hide();
    };

    var dxArray = [];
    function DxFunction(txt_0) {
        var id = parseInt(txt_0.split("_")[1]) + parseInt(1);
        if (txt_0.split("_")[1] !== undefined) {
            var currId = parseInt(id) - parseInt(1);
            var val = $("#txtDx_" + currId).val();
            if (val !== "" && val !== null) {
                if ($.inArray(val, dxArray) == -1) {
                    dxArray.push(val);
                    $("#Dx").val(dxArray);
                    var text = "'" + "txtDx_" + id + "'";
                    $("#DivDx").append('<div id="DivDxRow_' + id + '" class="form-group row"><label class= "col-md-3 lessWidth m-t-15" ></label><div class="col-md-3 input-group"></div><div class="col-md-3 input-group"><div class="input-group-prepend ControlHeight"><span class="input-group-text AdjustSerialNumber" id="basic-addon1">' + id + '</span></div><input type="text" placeholder="Code" tabindex="' + id + '" onfocusout="DxFunction(' + text + ')" class="form-control CoderDetails ControlHeight txtDx" id="txtDx_' + id + '" /></div></div>');
                    $("#txtDx_" + currId).removeAttr("onfocusout", "");
                    $("#txtDx_" + id).focus();
                }
            } else {
                $("#txtCpt_1").focus();
            }
        }
    }

    var dxArray2 = [];
    var dxArray3 = [];
    var dxArray4 = [];
    function DxCliams(txt_0) {
        var id = parseInt(txt_0.split("_")[1]) + parseInt(1);
        var cliamid = parseInt(txt_0.split("_")[2]);
        var seqno = parseInt($("#" + txt_0).val()) + parseInt(1);
        if (cliamid == 2) {
            if (txt_0.split("_")[1] !== undefined) {
                var currId = parseInt(id) - parseInt(1);
                var val = $("#txtDx2Cliam_" + currId).val();
                if (val !== "" && val !== null) {
                    if ($.inArray(val, dxArray2) == -1) {
                        dxArray2.push(val);
                        //$("#hdnDxCodes1").val(dxArray2);
                        var text = "'" + "txt" + cliamid + "Dx_" + seqno + "_" + parseInt(2) + "'";
                        var deleteDx = "'" + "Div2DxRow_" + id + "_" + cliamid + "'";
                        $("#DivDx_2").append('<div id="Div2DxRow_' + id + "_" + cliamid + '" class="form-group row"><label class="col-md-3 lessWidth m-t-15"></label><div class="col-md-3 input-group" style="visibility: hidden;"><input type="hidden" id=' + text + ' value=' + seqno +' /><div class="input-group-prepend ControlHeight"><span class="input-group-text AdjustSerialNumber" id="basic-addon1"></span></div><input class="form-control CoderDetails ControlHeight valid" type="text" value="" style="pointer-events: none; background-color: rgb(233, 236, 239);"><div class="input-group-append ControlHeight"><span class="input-group-text AcceptRejectWidth QACorrections"></span></div></div><div class="col-md-3 input-group"><div class="input-group-prepend ControlHeight"><span class="input-group-text dx2index AdjustSerialNumber" id="basic-addon1">' + seqno + '</span></div><input type="text" placeholder="Code" onfocusout="DxCliams(' + text + ')" class="form-control CoderDetails cliam_' + cliamid + '" id="txtDx2Cliam_' + id + '" /></div></div>');
                        $("#txtDx2Cliam_" + currId).removeAttr("onfocusout", "");
                        $("#txtDx2Cliam_1").removeAttr("onfocusout", "");
                        $("#txtDx2Cliam_" + id).focus();
                    }
                }
                else {
                    $("#txt2Cpt_1").focus();
                }
            }
        }
        if (cliamid == 3) {
            if (txt_0.split("_")[1] !== undefined) {
                var currId = parseInt(id) - parseInt(1);
                var val = $("#txtDx3Cliam_" + currId).val();
                if (val !== "" && val !== null) {
                    if ($.inArray(val, dxArray3) == -1) {
                        dxArray3.push(val);
                        //$("#hdnDxCodes2").val(dxArray3);
                        var text = "'" + "txt" + cliamid + "Dx_" + seqno + "_" + parseInt(3) + "'";
                        var deleteDx = "'" + "Div3DxRow_" + id + "_" + cliamid + "'";
                        $("#DivDx_3").append('<div id="Div3DxRow_' + id + "_" + cliamid + '" class="form-group row"><label class="col-md-3 lessWidth m-t-15"></label><div class="col-md-3 input-group" style="visibility: hidden;"><input type="hidden" id=' + text + ' value=' + seqno + ' /><div class="input-group-prepend ControlHeight"><span class="input-group-text AdjustSerialNumber" id="basic-addon1"></span></div><input class="form-control CoderDetails ControlHeight valid" type="text" value="" style="pointer-events: none; background-color: rgb(233, 236, 239);"><div class="input-group-append ControlHeight"><span class="input-group-text AcceptRejectWidth QACorrections"></span></div></div><div class="col-md-3 input-group"><div class="input-group-prepend ControlHeight"><span class="input-group-text dx3index AdjustSerialNumber" id="basic-addon1">' + seqno + '</span></div><input type="text" placeholder="Code" onfocusout="DxCliams(' + text + ')" class="form-control CoderDetails cliam_' + cliamid + '" id="txtDx3Cliam_' + id + '" /></div></div>');
                        $("#txtDx3Cliam_" + currId).removeAttr("onfocusout", "");
                        $("#txtDx3Cliam_1").removeAttr("onfocusout", "");
                        $("#txtDx3Cliam_" + id).focus();
                    }
                } else {
                    $("#txt3Cpt_1").focus();
                }
            }
        }
        if (cliamid == 4) {
            if (txt_0.split("_")[1] !== undefined) {
                var currId = parseInt(id) - parseInt(1);
                var val = $("#txtDx4Cliam_" + currId).val();
                if (val !== "" && val !== null) {
                    if ($.inArray(val, dxArray4) == -1) {
                        dxArray4.push(val);
                        //$("#hdnDxCodes3").val(dxArray4);
                        var text = "'" + "txt" + cliamid + "Dx_" + seqno + "_" + parseInt(4) + "'";
                        var deleteDx = "'" + "Div4DxRow_" + id + "_" + cliamid + "'";
                        $("#DivDx_4").append('<div id="Div4DxRow_' + id + "_" + cliamid + '" class="form-group row"><label class="col-md-3 lessWidth m-t-15"></label><div class="col-md-3 input-group" style="visibility: hidden;"><input type="hidden" id=' + text + ' value=' + seqno + ' /><div class="input-group-prepend ControlHeight"><span class="input-group-text AdjustSerialNumber" id="basic-addon1"></span></div><input class="form-control CoderDetails ControlHeight valid" type="text" value="" style="pointer-events: none; background-color: rgb(233, 236, 239);"><div class="input-group-append ControlHeight"><span class="input-group-text AcceptRejectWidth QACorrections"></span></div></div><div class="col-md-3 input-group"><div class="input-group-prepend ControlHeight"><span class="input-group-text dx4index AdjustSerialNumber" id="basic-addon1">' + seqno + '</span></div><input type="text" placeholder="Code" onfocusout="DxCliams(' + text + ')" class="form-control CoderDetails cliam_' + cliamid + '" id="txtDx4Cliam_' + id + '" /></div></div>');
                        $("#txtDx4Cliam_" + currId).removeAttr("onfocusout", "");
                        $("#txtDx4Cliam_1").removeAttr("onfocusout", "");
                        $("#txtDx4Cliam_" + id).focus();
                    }
                } else {
                    $("#txt4Cpt_1").focus();
                }
            }
        }
    }

    var cptArray = [];
    function CptFunction(txtCpt_0) {
        var id = parseInt(txtCpt_0.split("_")[1]) + parseInt(1);
        if (txtCpt_0.split("_")[1] !== undefined) {
            var id1 = parseInt(id) - parseInt(1);
            var val1 = $("#txtCpt_" + id1).val();

            var val2 = null;
            if ($("#txtMod_" + id1).val() != "")
                val2 = $("#txtMod_" + id1).val().replace(",", "|");

            var val3 = null;
            if ($("#txtQty_" + id1).val() != "")
                val3 = $("#txtQty_" + id1).val();

            var val4 = null;
            if ($("#txtLinks_" + id1).val() != "")
                val4 = $("#txtLinks_" + id1).val().replace(",", "|");

            if (val1 !== "") {
                if ($.inArray(val1, cptArray) == -1) {
                    cptArray.push(val1 + "^" + val2 + "^" + val3 + "^" + val4);
                    $("#CPTCode").val(cptArray);
                    var count = id + parseInt(1);
                    var txtLinks = "'" + "txtLinks_" + id + "'";
                    var tabindex1 = parseInt(9) + parseInt(id) + parseInt(count) + parseInt(val1);
                    var tabindex2 = parseInt(10) + parseInt(id) + parseInt(count) + parseInt(val1);
                    var tabindex3 = parseInt(11) + parseInt(id) + parseInt(count) + parseInt(val1);
                    var tabindex4 = parseInt(12) + parseInt(id) + parseInt(count) + parseInt(val1);
                    $("#DivCpt").append('<div id="DivCptRow_' + id + '" class="form-group row"><label class="col-md-3 lessWidth m-t-15"></label><div class="col-md-3 CptlessWidth input-group"></div ><div class="col-md-3 CptlessWidth input-group"><div class="input-group-prepend ControlHeight"><span class="input-group-text AdjustSerialNumber" id="basic-addon1">' + id + '</span></div><input tabindex = "' + tabindex1 + '" type = "text" maxlength="5" style="min-width:50px;" placeholder = "Code" class= "form-control CoderDetails ControlHeight txtCpt" id = "txtCpt_' + id + '" /><input tabindex="' + tabindex2 + '" type="text" style="min-width:42px;" class="form-control CoderDetails ControlHeight" placeholder="Mod" id="txtMod_' + id + '"/><input tabindex="' + tabindex3 + '" type="text" style="max-width:23px;" class="form-control CoderDetails ControlHeight" placeholder="1" value="1" id="txtQty_' + id + '"/><input tabindex="' + tabindex4 + '" type="text" class="form-control CoderDetails ControlHeight" placeholder="Link All" onfocusout="CptFunction(' + txtLinks + ')" id="txtLinks_' + id + '"/></div></div>');
                    $("#txtLinks_" + id1).removeAttr("onfocusout", "");
                    $("#txtCpt_" + id).focus();
                }

            }
        }
    }

    var cptArray2 = [];
    var cptArray3 = [];
    var cptArray4 = [];
    function CptCliams(txtCpt_0) {
        var id = parseInt(txtCpt_0.split("_")[1]) + parseInt(1);
        var cliamid = parseInt(txtCpt_0.split("_")[2]);
        var seqno = parseInt($("#" + txtCpt_0).val()) + parseInt(1);
        if (cliamid == 2) {
            if (txtCpt_0.split("_")[1] !== undefined) {
                var id1 = parseInt(id) - parseInt(1);
                var val1 = $("#txt2Cpt_" + id1).val();
                if (val1 !== "") {
                    if ($.inArray(val1, cptArray2) == -1) {
                        //if (val1 !== undefined) {
                            var txtLinks = "'" + "txt" + cliamid + "links_" + seqno + "_" + parseInt(2) + "'";
                            var deleteCpt = "'" + "Div2CptRow_" + id + "_" + cliamid + "'";
                            $("#DivCpt_2").append('<div id="Div2CptRow_' + id + "_" + cliamid + '" class="form-group row"><label class="col-md-3 lessWidth m-t-15"></label><div class="col-md-3 CptlessWidth input-group" style="visibility: hidden;"><input type="hidden" id=' + txtLinks + ' value=' + seqno + ' /><div class="input-group-prepend ControlHeight"><span class="input-group-text AdjustSerialNumber" id="basic-addon1"></span></div><input type="text" maxlength="5" style="min-width: 50px; pointer-events: none; background-color: rgb(233, 236, 239);" class="form-control CoderDetails ControlHeight" autocomplete="off" placeholder="Code" value=""><input type="text" style="min-width: 42px; pointer-events: none; background-color: rgb(233, 236, 239);" class="form-control CoderDetails ControlHeight" autocomplete="off" placeholder="Mod" value=""><input type="text" style="max-width: 23px; pointer-events: none; background-color: rgb(233, 236, 239);" class="form-control CoderDetails ControlHeight" autocomplete="off" placeholder="1" value=""><input type="text" class="form-control CoderDetails ControlHeight" autocomplete="off" placeholder="Link All" value="" style="pointer-events: none; background-color: rgb(233, 236, 239);"><div class="input-group-append ControlHeight"><span class="input-group-text AcceptRejectWidth"></span></div></div><div class="col-md-3 CptlessWidth input-group"><div class="input-group-prepend ControlHeight"><span class="input-group-text cpt2index AdjustSerialNumber" id="basic-addon1">' + seqno + '</span></div><input type = "text" placeholder = "Code" style="max-width:55px;" maxlength="5" class= "form-control CoderDetails Cptcliam_' + cliamid + '" id = "txt2Cpt_' + id + '" /><input type="text" style="max-width:50px;" class="form-control CoderDetails Cptcliam_' + cliamid + '" placeholder="Mod" id="txt2mod_' + id + '"/><input type="text" style="max-width:30px;" class="form-control CoderDetails Cptcliam_' + cliamid + '" placeholder="1" value="1" id="txt2qty_' + id + '"/><input type="text" class="form-control CoderDetails Cptcliam_' + cliamid + '" placeholder="Link All" onfocusout="CptCliams(' + txtLinks + ')" id="txt2links_' + id + '"/></div></div>');
                            $("#txt2links_" + id1).removeAttr("onfocusout", "");
                            $("#txt2links_1").removeAttr("onfocusout", "");
                            $("#txt2Cpt_" + id).focus();
                        //}
                    }
                }
                else {
                    $("#ProviderFeedbacks_" + id).focus();
                }
            }
        }

        if (cliamid == 3) {
            if (txtCpt_0.split("_")[1] !== undefined) {
                var id1 = parseInt(id) - parseInt(1);
                var val1 = $("#txt3Cpt_" + id1).val();
                if (val1 !== "") {
                    if ($.inArray(val1, cptArray3) == -1) {
                        //if (val1 !== undefined) {
                            var txtLinks = "'" + "txt" + cliamid + "links_" + seqno + "_" + parseInt(3) + "'";
                            var deleteCpt = "'" + "Div3CptRow_" + id + "_" + cliamid + "'";
                            $("#DivCpt_3").append('<div id="Div3CptRow_' + id + "_" + cliamid + '" class="form-group row"><label class="col-md-3 lessWidth m-t-15"></label><div class="col-md-3 CptlessWidth input-group" style="visibility: hidden;"><input type="hidden" id=' + txtLinks + ' value=' + seqno + ' /><div class="input-group-prepend ControlHeight"><span class="input-group-text AdjustSerialNumber" id="basic-addon1"></span></div><input type="text" maxlength="5" style="min-width: 50px; pointer-events: none; background-color: rgb(233, 236, 239);" class="form-control CoderDetails ControlHeight" autocomplete="off" placeholder="Code" value=""><input type="text" style="min-width: 42px; pointer-events: none; background-color: rgb(233, 236, 239);" class="form-control CoderDetails ControlHeight" autocomplete="off" placeholder="Mod" value=""><input type="text" style="max-width: 23px; pointer-events: none; background-color: rgb(233, 236, 239);" class="form-control CoderDetails ControlHeight" autocomplete="off" placeholder="1" value=""><input type="text" class="form-control CoderDetails ControlHeight" autocomplete="off" placeholder="Link All" value="" style="pointer-events: none; background-color: rgb(233, 236, 239);"><div class="input-group-append ControlHeight"><span class="input-group-text AcceptRejectWidth"></span></div></div><div class="col-md-3 CptlessWidth input-group"><div class="input-group-prepend ControlHeight"><span class="input-group-text cpt2index AdjustSerialNumber" id="basic-addon1">' + seqno + '</span></div><input type = "text" placeholder = "Code" style="max-width:55px;" maxlength="5" class= "form-control CoderDetails Cptcliam_' + cliamid + '" id = "txt3Cpt_' + id + '" /><input type="text" style="max-width:50px;" class="form-control CoderDetails Cptcliam_' + cliamid + '" placeholder="Mod" id="txt3mod_' + id + '"/><input type="text" style="max-width:30px;" class="form-control CoderDetails Cptcliam_' + cliamid + '" placeholder="1" value="1" id="txt3qty_' + id + '"/><input type="text" class="form-control CoderDetails Cptcliam_' + cliamid + '" placeholder="Link All" onfocusout="CptCliams(' + txtLinks + ')" id="txt3links_' + id + '"/></div></div>');
                            $("#txt3links_" + id1).removeAttr("onfocusout", "");
                            $("#txt3links_1").removeAttr("onfocusout", "");
                            $("#txt3Cpt_" + id).focus();
                        //}
                    }
                }
                else {
                    $("#ProviderFeedbacks_" + id).focus();
                }
            }
        }

        if (cliamid == 4) {
            if (txtCpt_0.split("_")[1] !== undefined) {
                var id1 = parseInt(id) - parseInt(1);
                var val1 = $("#txt4Cpt_" + id1).val();
                if (val1 !== "") {
                    if ($.inArray(val1, cptArray4) == -1) {
                        //if (val1 !== undefined) {
                            var txtLinks = "'" + "txt" + cliamid + "links_" + seqno + "_" + parseInt(4) + "'";
                            var deleteCpt = "'" + "Div4CptRow_" + id + "_" + cliamid + "'";
                            $("#DivCpt_4").append('<div id="Div4CptRow_' + id + "_" + cliamid + '" class="form-group row"><label class="col-md-3 lessWidth m-t-15"></label><div class="col-md-3 CptlessWidth input-group" style="visibility: hidden;"><input type="hidden" id=' + txtLinks + ' value=' + seqno + ' /><div class="input-group-prepend ControlHeight"><span class="input-group-text AdjustSerialNumber" id="basic-addon1"></span></div><input type="text" maxlength="5" style="min-width: 50px; pointer-events: none; background-color: rgb(233, 236, 239);" class="form-control CoderDetails ControlHeight" autocomplete="off" placeholder="Code" value=""><input type="text" style="min-width: 42px; pointer-events: none; background-color: rgb(233, 236, 239);" class="form-control CoderDetails ControlHeight" autocomplete="off" placeholder="Mod" value=""><input type="text" style="max-width: 23px; pointer-events: none; background-color: rgb(233, 236, 239);" class="form-control CoderDetails ControlHeight" autocomplete="off" placeholder="1" value=""><input type="text" class="form-control CoderDetails ControlHeight" autocomplete="off" placeholder="Link All" value="" style="pointer-events: none; background-color: rgb(233, 236, 239);"><div class="input-group-append ControlHeight"><span class="input-group-text AcceptRejectWidth"></span></div></div><div class="col-md-3 CptlessWidth input-group"><div class="input-group-prepend ControlHeight"><span class="input-group-text cpt2index AdjustSerialNumber" id="basic-addon1">' + seqno + '</span></div><input type = "text" placeholder = "Code" style="max-width:55px;" maxlength="5" class= "form-control CoderDetails Cptcliam_' + cliamid + '" id = "txt4Cpt_' + id + '" /><input type="text" style="max-width:50px;" class="form-control CoderDetails Cptcliam_' + cliamid + '" placeholder="Mod" id="txt4mod_' + id + '"/><input type="text" style="max-width:30px;" class="form-control CoderDetails Cptcliam_' + cliamid + '" placeholder="1" value="1" id="txt4qty_' + id + '"/><input type="text" class="form-control CoderDetails Cptcliam_' + cliamid + '" placeholder="Link All" onfocusout="CptCliams(' + txtLinks + ')" id="txt4links_' + id + '"/></div></div>');
                            $("#txt4links_" + id1).removeAttr("onfocusout", "");
                            $("#txt4links_1").removeAttr("onfocusout", "");
                            $("#txt4Cpt_" + id).focus();
                        //}
                    }
                }
                else {
                    $("#ProviderFeedbacks_" + id).focus();
                }
            }
        }
    }

    var txtdanger = $('[class*=txtdanger][style=""]');
    if (txtdanger.length > 0)
        e.preventDefault();

    removevalid = function (id) {
        var id1 = id.split("_")[0];
        var id2 = id.split("_")[1];
        if ($("#" + id1 +"Remarks_" + id2).val() != "") {
            $("#valid" + id1 +"_" + id2).hide();
        } else {
            $("#valid" + id1 +"_" + id2).show();
        }
    };

    removeClaimValid = function (id) {
        var id1 = id.split("_")[0];
        var id2 = id.split("_")[2];
        if ($("#" + id).val() != "") {
            $("#valid" + id1 + "Claim_" + id2).hide();
        } else {
            $("#valid" + id1 + "Claim_" + id2).show();
        }
    };

</script>
