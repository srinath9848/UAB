@model UAB.DTO.ChartSummaryDTO

<style>
    .modal-content {
        margin-top: 90px;
    }

    .errorTxt {
        color: red;
        min-height: 20px;
    }

    .tableresponsiveforroles {
        max-height: 200px;
    }

    .roledddwith {
        width: 215px;
    }

    .col-md-3 {
        margin-left: 10px !important;
    }

    .form-control {
        padding: 0 !important;
    }

    div.CptlessWidth {
        max-width: 20% !important;
    }

    .ControlHeight {
        height: 32px !important;
    }

    label.lessWidth {
        max-width: 12% !important;
    }

    .AlignControl {
        margin-right: -115px;
    }

    .AdjustSerialNumber {
        max-width: 25px;
        padding-left: 5px;
    }
</style>
<div class="modal fade modal-mini modal-primary show" id="myModal1" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" style="display: block;">
    <div class="modal-dialog">
        <div class="modal-content" style="width: 500px; margin-top:0px;">
            <div class="modal-header" style="background: #27a9e3;color: white;">
                <h5 class="modal-title" id="exampleModalLongTitle">Provider Posted Clinical case</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="ModalClose1()">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" style="overflow-y: scroll; max-height:560px;">
                <input type="hidden" id="hdnProDxCodes" name="hdnProDxCodes" />
                <input type="hidden" id="hdnProCptCodes" name="hdnProCptCodes" />
                <input type="hidden" id="ccid" value="@ViewBag.ccid" />
                <input type="hidden" id="statusid" value="@ViewBag.statusid" />
                <div class="col-md-12 form-group">
                    <div class="input-group">
                        <label class="col-md-5">Posted Provider</label>
                        @Html.DropDownListFor(model => model.PostedProviderId, new SelectList(@ViewBag.Providers, "ID", "Name"), "--Select--", new { @id = "providerPostedId", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.PostedProviderId, null, new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-12 form-group">
                    <div class="input-group">
                        <label class="col-md-5">Payor</label>
                        @Html.DropDownListFor(model => model.PostedPayorId, new SelectList(@ViewBag.Payors, "ID", "Name"), "--Select--", new { @id = "payorPostedId", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.PostedPayorId, null, new { @class = "text-danger" })
                    </div>
                </div>
                <div id="DivDx_Pro">
                    <div class="col-md-12 form-group" id="DivDxRow_1">
                        <div class="input-group">
                            <label class="col-md-5">Provider Dx</label>
                            <div class="input-group-prepend ControlHeight">
                                <span class="input-group-text dxindex AdjustSerialNumber" id="basic-addon1">1</span>
                            </div>
                            @Html.TextBoxFor(model => model.PostedDx, new { @class = "form-control CoderDetails txtProDx ControlHeight", @autocomplete = "off", @id = "txtProDx_1", @placeholder = "Code", @onfocusout = "ProDxFunction('txtProDx_1')" })
                            @Html.ValidationMessageFor(model => model.PostedDx, null, new { @class = "text-danger Dxerror" })
                        </div>
                    </div>
                </div>
                <div id="DivCpt">
                    <div class="col-md-12 form-group" id="DivCptRow_1">
                        <div class="input-group">
                            <label class="col-md-5">Provider CPT</label>
                            <div class="input-group-prepend ControlHeight">
                                <span class="input-group-text cptindex AdjustSerialNumber" id="basic-addon1">1</span>
                            </div>
                            @Html.TextBoxFor(model => model.PostedCpt, new { @class = "form-control CoderDetails txtProCpt ControlHeight", @autocomplete = "off", @placeholder = "Code", @id = "txtProCpt_1", @style = "max-width:55px;", @maxlength = "5" })
                            <input type="text" class="form-control CoderDetails txtMod" id="txtProMod_1" autocomplete="off" placeholder="Mod" style="max-width:50px;" />
                            <input type="text" id="txtProQty_1" class="form-control CoderDetails cptQtyClaim txtQty" autocomplete="off" placeholder="Qty" value="1" style="max-width:25px;" />
                            <input type="text" id="txtProLinks_1" onfocusout="ProCptFunction('txtProLinks_1')" class="form-control CoderDetails cptLinksClaim txtLinks" autocomplete="off" placeholder="Link All" style="min-width:63px;" />
                            @Html.ValidationMessageFor(model => model.PostedCpt, null, new { @class = "text-danger Dxerror" })
                        </div>
                    </div>
                </div>
                <div class="col-md-12 form-group">
                    <div class="input-group">
                        <label class="col-md-5">Posting Date</label>
                        @Html.TextBoxFor(model => model.PostingDate, new { @class = "form-control", @type = "date", @autofocus = "autofocus", @id = "txtPostingDate", @autocomplete = "off", @placeholder = "Enter Posting Date", @style = "padding: 0.375rem 0.75rem!important;" })
                        @Html.ValidationMessageFor(model => model.PostingDate, null, new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-12 form-group">
                    <div class="input-group">
                        <label class="col-md-5">Comment</label>
                        @Html.TextAreaFor(model => model.CoderComment, new { @id = "txtCoderComment", @placeholder = "Enter a Coder Comments here", @class = "form-control", @autocomplete = "off", @style = "padding: 0.375rem 0.75rem!important;" })
                        @Html.ValidationMessageFor(model => model.CoderComment, null, new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div id="assignerror" style="color:red"></div>
            <div class="modal-footer">
                <button type="submit" class="btn btn-sm btn-info btn-fill" id="btnsubmit" onclick="ProviderPostedClinicalcase()" name="btnsubmit">Save</button>
                <button type="button" class="btn btn-sm btn-danger btn-fill" onclick="ModalClose1()">Cancel</button>
            </div>
        </div>
    </div>
</div>
<script src="~/dashboardassets/libs/jquery/dist/jquery.min.js"></script>
<script src="~/dashboardassets/libs/jquery-validation/dist/jquery.validate.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.11/jquery.validate.unobtrusive.min.js" type="text/javascript"></script>
<script src="~/dashboardassets/extra-libs/DataTables/datatables.js"></script>

<script type="text/javascript">

    $(document).ready(function () {
        $("#btnsubmit").click(function (e) {
            $("#hdnSubmitAndPost").val($(this).attr("id"));
        });

        ModalClose1 = function () {
            $("#modalContent").html('');
            $("#hdnProviderPosted").val('');
        }

        var today = new Date();
        var dd = today.getDate();
        var mm = today.getMonth() + 1; //January is 0!
        var yyyy = today.getFullYear();
        if (dd < 10) {
            dd = '0' + dd;
        }
        if (mm < 10) {
            mm = '0' + mm;
        }

        today = yyyy + '-' + mm + '-' + dd;
        $("#txtPostingDate").attr("max", today);
    });

    var dxArray = [];
    function ProDxFunction(txt_0) {
        var id = parseInt(txt_0.split("_")[1]) + parseInt(1);
        if (txt_0.split("_")[1] !== undefined) {
            var currId = parseInt(id) - parseInt(1);
            var val = $("#txtProDx_" + currId).val();
            if (val !== "" && val !== null) {
                if ($.inArray(val, dxArray) == -1) {
                    dxArray.push(val);
                    $("#hdnProDxCodes").val(dxArray);
                    var text = "'" + "txt_" + id + "'";
                    var deleteDx = "'" + "DivDxRow_" + id + "'";
                    $("#DivDx_Pro").append('<div id="DivDxRow_' + id + '" class="col-md-12 form-group"><div class="input-group"><label class="col-md-5"></label><div class="input-group-prepend ControlHeight"><span class="input-group-text dxindex AdjustSerialNumber" id="basic-addon1">' + id + '</span></div><input type="text" placeholder="Code" onfocusout="ProDxFunction(' + text + ')" class="form-control CoderDetails txtProDx" id="txtProDx_' + id + '" /><button type="button" id="DeleteProDxCodes_' + id + '" class="btn btn-sm" style="max-width:18px;padding-left:5px;margin-left:-5px;" onclick="DeleteProDxCodes(' + deleteDx + ')"><i class="fa fa-times"></i></button></div></div>');
                    $("#txtProDx_" + currId).removeAttr("onfocusout", "");
                    $("#txtProDx_1").removeAttr("onfocusout", "");
                    $("#txtProDx_" + id).focus();
                } else {
                    //$("#txtDx_" + currId).addClass('text-danger');
                }
            } else {
                $("#txtProCpt_1").focus();
            }
        }
    }

    var cptArray = [];
    function ProCptFunction(txtCpt_0) {
        var id = parseInt(txtCpt_0.split("_")[1]) + parseInt(1);
        if (txtCpt_0.split("_")[1] !== undefined) {
            var id1 = parseInt(id) - parseInt(1);
            var val1 = $("#txtProCpt_" + id1).val();

            var val2 = null;
            if ($("#txtProMod_" + id1).val() != "")
                val2 = $("#txtProMod_" + id1).val();

            var val3 = null;
            if ($("#txtProQty_" + id1).val() != "")
                val3 = $("#txtProQty_" + id1).val();

            var val4 = null;
            if ($("#txtProLinks_" + id1).val() != "")
                val4 = $("#txtProLinks_" + id1).val();

            if (val1 !== "") {
                if ($.inArray(val1, cptArray) == -1) {
                    cptArray.push(val1 + "^" + val2 + "^" + val3 + "^" + val4);
                    $("#hdnProCptCodes").val(cptArray);
                    var count = id + parseInt(1);
                    var txtLinks = "'" + "txtProLinks_" + id + "'";
                    var deleteCpt = "'" + "DivCptRow_" + id + "'";
                    var tabindex1 = parseInt(1) + parseInt(id) + parseInt(count) + parseInt(val1);
                    var tabindex2 = parseInt(2) + parseInt(id) + parseInt(count) + parseInt(val1);
                    var tabindex3 = parseInt(3) + parseInt(id) + parseInt(count) + parseInt(val1);
                    var tabindex4 = parseInt(4) + parseInt(id) + parseInt(count) + parseInt(val1);
                    $("#DivCpt").append('<div id="DivCptRow_' + id + '" class="col-md-12 form-group"><div class="input-group"><label class="col-md-5"></label><div class="input-group-prepend ControlHeight"><span class="input-group-text cptindex AdjustSerialNumber" id="basic-addon1">' + id + '</span></div><input tabindex = "' + tabindex1 + '" type = "text" placeholder = "Code" style="max-width:55px;" maxlength="5" class= "form-control CoderDetails txtCpt" id = "txtProCpt_' + id + '" /><input tabindex="' + tabindex2 + '" type="text" class="form-control CoderDetails" style="max-width:50px;" placeholder="Mod" id="txtProMod_' + id + '"/><input tabindex="' + tabindex3 + '" type="text" class="form-control CoderDetails cptQtyClaim" style="max-width:25px;" placeholder="Qty" value="1" id="txtProQty_' + id + '"/><input tabindex="' + tabindex4 + '" type="text" class="form-control CoderDetails cptLinksClaim txtLinks" placeholder="Link All" onfocusout="ProCptFunction(' + txtLinks + ')" id="txtProLinks_' + id + '"/><button type="button" class="btn btn-sm" style="max-width:18px;padding-left:5px;margin-left:-5px;" onclick="DeleteCptCodes(' + deleteCpt + ')"><i class="fa fa-times"></i></button></div></div>');
                    $("#txtProLinks_" + id1).removeAttr("onfocusout", "");
                    $("#txtProLinks_1").removeAttr("onfocusout", "");
                    $("#txtProCpt_" + id).focus();
                }
            } else {
                $("#providerPostedId").focus();
            }
        }
    }

    DeleteProDxCodes = function (id) {
        var iCnt = 0;
        var Cnt = 0;
        var index = id.split('_')[1];
        var val = $("#" + index).val();
        dxArray.splice($.inArray(val, dxArray), 1);
        $("#hdnProDxCodes").val(dxArray);
        $('#' + id).remove();
        $(".dxindex").each(function () {
            if (iCnt <= 100) {
                iCnt = iCnt + 1;
                $(this).text(iCnt);
            }
        });

        $(".txtProDx").each(function () {
            if (Cnt <= 100) {
                Cnt = Cnt + 1;
                $(this).attr('id', 'txtProDx_' + Cnt);
            }
        });
        var lastindex = $(".txtProDx").last().attr('id');
        $("#" + lastindex).attr("onfocusout", "ProDxFunction('" + "txt_" + Cnt + "')");
    };

    $('#btnsubmit').click(function (e) {

        $('#providerFeedbackIds').val($('#ProviderFeedbackId option:selected').toArray().map(item => item.value).join());
        $('#providerFeedbackIds2').val($('#ProviderFeedbacks_2 option:selected').toArray().map(item => item.value).join());
        $('#providerFeedbackIds3').val($('#ProviderFeedbacks_3 option:selected').toArray().map(item => item.value).join());
        $('#providerFeedbackIds4').val($('#ProviderFeedbacks_4 option:selected').toArray().map(item => item.value).join());

        var DxCodes = $("[id*=txtProDx_]");
        $("#hdnProDxCodes").val("");
        for (var i = 0; i < DxCodes.length; i++) {
            if ($("#" + $(DxCodes[i]).attr("id")).val() != "") {
                if ($("#hdnProDxCodes").val() == "")
                    $("#hdnProDxCodes").val($(DxCodes[i]).val());
                else
                    $("#hdnProDxCodes").val($("#hdnProDxCodes").val() + "," + $(DxCodes[i]).val());
            }
        }


        $("#hdnProCptCodes").val("");
        var CptCodes = $("[id*=DivCptRow_]");
        for (var i = 1; i <= CptCodes.length; i++) {
            if ($("#hdnProCptCodes").val() == "") {
                if ($("#txtProCpt_" + i).val() != "") {
                    var mod = $("#txtProMod_" + i).val() != "" ? $("#txtProMod_" + i).val() : null;
                    var qty = $("#txtProQty_" + i).val() != "" ? $("#txtProQty_" + i).val() : null;
                    var links = $("#txtProLinks_" + i).val() != "" ? $("#txtLinks_" + i).val() : null;
                    $("#hdnProCptCodes").val($("#txtProCpt_" + i).val() + "^" + mod + "^" + qty + "^" + links);
                }
            } else {
                if ($("#txtProCpt_" + i).val() != "" && $("#txtProCpt_" + i).val() != undefined) {
                    var mod = $("#txtProMod_" + i).val() != "" ? $("#txtProMod_" + i).val() : null;
                    var qty = $("#txtProQty_" + i).val() != "" ? $("#txtProQty_" + i).val() : null;
                    var links = $("#txtLinks_" + i).val() != "" ? $("#txtProLinks_" + i).val() : null;
                    $("#hdnProCptCodes").val($("#hdnProCptCodes").val() + "|" + $("#txtProCpt_" + i).val() + "^" + mod + "^" + qty + "^" + links);
                }
            }
        }
    });





</script>
